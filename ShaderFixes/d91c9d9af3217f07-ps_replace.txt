// ---- Created with 3Dmigoto v1.3.16 on Fri Jul 19 22:48:28 2024
Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[160];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float4 v5 : TEXCOORD3,
  float4 v6 : TEXCOORD4,
  float4 v7 : TEXCOORD5,
  float4 v8 : TEXCOORD6,
  float4 v9 : TEXCOORD11,
  float4 v10 : TEXCOORD12,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float o3 : SV_Target3,
  out float o4 : SV_Target4,
  out float o5 : SV_Target5)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cmp(0 != cb0[134].x);
  r0.x = cmp(0 != cb0[32].y);
  if (r0.x != 0) {
    r0.xy = t0.Sample(s1_s, v10.xy).xz;
    r0.z = 1 + -cb0[89].y;
    r1.z = max(0.00100000005, r0.z);
    r1.xy = r0.xy * float2(2,2) + float2(-1,-1);
    r0.x = dot(r1.xyz, r1.xyz);
    r0.x = rsqrt(r0.x);
    r0.xyz = r1.xyz * r0.xxx;
  } else {
    r1.xy = cb0[32].zz + v10.yx;
    r2.xyz = t0.Sample(s1_s, v10.xy).xyz;
    r1.zw = v10.xy;
    r3.xyz = t0.Sample(s1_s, r1.zx).xyz;
    r1.xyz = t0.Sample(s1_s, r1.yw).xyz;
    r1.xyz = r1.xyz + -r2.xyz;
    r2.xyz = r3.xyz + -r2.xyz;
    r3.xy = cmp(cb0[32].xx == float2(2,1));
    r0.w = r3.y ? r1.y : r1.x;
    r0.w = r3.x ? r1.z : r0.w;
    r1.x = r3.y ? r2.y : r2.x;
    r1.x = r3.x ? r2.z : r1.x;
    r2.x = cb0[32].w * r0.w;
    r2.y = cb0[32].w * r1.x;
    r2.z = 0;
    r1.xyz = float3(0,0,1) + -r2.xyz;
    r0.w = dot(r1.xyz, r1.xyz);
    r0.w = rsqrt(r0.w);
    r0.xyz = r1.xyz * r0.www;
  }
  r1.xyz = t1.Sample(s0_s, v10.xy).xyz;
  r2.xy = cmp(cb0[32].xx == float2(2,1));
  r0.w = r2.y ? r1.y : r1.x;
  r0.w = r2.x ? r1.z : r0.w;
  r1.xyz = ddx_coarse(v9.yzx);
  r2.xyz = ddy_coarse(v9.zxy);
  r3.xy = ddx_coarse(v10.xy);
  r3.zw = ddy_coarse(v10.xy);
  r4.xyz = v7.yzx * r2.xyz;
  r2.xyz = r2.zxy * v7.zxy + -r4.xyz;
  r4.xyz = v7.zxy * r1.xyz;
  r1.xyz = v7.yzx * r1.yzx + -r4.xyz;
  r4.xyz = r1.xyz * r3.zzz;
  r4.xyz = r2.xyz * r3.xxx + r4.xyz;
  r1.xyz = r1.xyz * r3.www;
  r1.xyz = r2.xyz * r3.yyy + r1.xyz;
  r1.w = dot(r4.xyz, r4.xyz);
  r2.x = dot(r1.xyz, r1.xyz);
  r1.w = max(r2.x, r1.w);
  r1.w = sqrt(r1.w);
  r1.w = 1 / r1.w;
  r2.xyz = r4.xyz * r1.www;
  r2.w = dot(r2.xyz, r2.xyz);
  r2.w = rsqrt(r2.w);
  r2.xyz = r2.xyz * r2.www;
  r1.xyz = r1.xyz * r1.www;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r1.w = dot(v9.xyz, v9.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = v9.xyz * r1.www;
  r4.xy = cmp(float2(0,0.5) < cb0[152].ww);
  r2.w = cmp(0 != v7.w);
  r5.xyz = r2.www ? cb0[153].xyz : cb0[152].xyz;
  r4.xzw = r4.xxx ? r5.xyz : cb0[148].xyz;
  r5.xyz = v9.xyz * r1.www + r4.xzw;
  r1.w = dot(r5.xyz, r5.xyz);
  r1.w = rsqrt(r1.w);
  r5.xyz = r5.xyz * r1.www;
  r1.w = -1 + cb0[134].z;
  r6.xyzw = t2.SampleBias(s2_s, v10.xy, r1.w).xyzw;
  r2.w = v0.z / v0.w;
  r2.w = cb1[8].z * r2.w + cb1[8].w;
  r2.w = 1 / r2.w;
  r3.w = cb0[90].x * r2.w + cb0[89].z;
  r5.w = min(0.99000001, cb0[90].y);
  r3.w = min(r5.w, r3.w);
  r2.w = cmp(r2.w >= cb0[90].z);
  r2.w = r2.w ? 1.000000 : 0;
  r5.w = cb0[89].w * r2.w;
  r3.w = 1 + -r3.w;
  r0.w = -r3.w + r0.w;
  r0.w = cb0[89].w * r2.w + r0.w;
  r2.w = r5.w + r5.w;
  r0.w = saturate(r0.w / r2.w);
  r7.xyz = cb0[91].xyz * r6.xyz + -r6.xyz;
  r6.xyz = r0.www * r7.xyz + r6.xyz;
  r7.xyz = cmp(cb0[86].xxx == float3(3,1,2));
  r0.w = cb0[99].w * r6.w;
  r8.xyz = cb0[100].xyz + -r6.xyz;
  r8.xyz = r0.www * r8.xyz + r6.xyz;
  r6.xyz = r7.xxx ? r8.xyz : r6.xyz;
  r0.w = -cb0[86].y + r6.w;
  r0.w = cmp(r0.w < 0);
  r0.w = r7.y ? r0.w : 0;
  if (r0.w != 0) discard;
  r8.xyzw = t3.SampleBias(s3_s, v10.xy, r1.w).xyzw;
  r0.w = cmp(0.00100000005 >= cb0[93].x);
  r0.w = r0.w ? 1.000000 : 0;
  r0.w = r0.w * -r8.y + r8.y;
  r1.w = cmp(0 != cb0[110].x);
  r9.xyzw = cmp(r8.wwww >= float4(0.800000012,0.400000006,0.200000003,0.600000024));
  r1.w = r1.w ? r9.x : 0;
  r1.w = r1.w ? 2 : 1;
  r2.w = cmp(0 != cb0[115].w);
  r2.w = r9.y ? r2.w : 0;
  r7.xyw = cmp(r8.www < float3(0.600000024,0.400000006,0.800000012));
  r2.w = r2.w ? r7.x : 0;
  r1.w = r2.w ? 3 : r1.w;
  r2.w = cmp(0 != cb0[121].w);
  r2.w = r9.z ? r2.w : 0;
  r2.w = r7.y ? r2.w : 0;
  r1.w = r2.w ? 4 : r1.w;
  r2.w = cmp(0 != cb0[127].w);
  r2.w = r9.w ? r2.w : 0;
  r2.w = r7.w ? r2.w : 0;
  r1.w = r2.w ? 5 : r1.w;
  r9.xyzw = cmp(r1.wwww == float4(2,3,4,5));
  r7.xyw = r9.xxx ? cb0[110].yzw : cb0[83].xyz;
  r7.xyw = r9.yyy ? cb0[116].xyz : r7.xyw;
  r7.xyw = r9.zzz ? cb0[122].xyz : r7.xyw;
  r7.xyw = r9.www ? cb0[128].xyz : r7.xyw;
  r2.w = cmp(0.99000001 >= r0.z);
  r1.xyz = r1.xyz * r0.yyy;
  r1.xyz = r0.xxx * r2.xyz + r1.xyz;
  r0.xyz = r0.zzz * v7.xyz + r1.xyz;
  r1.x = dot(r0.xyz, r0.xyz);
  r1.x = rsqrt(r1.x);
  r0.xyz = r1.xxx * r0.xyz;
  r0.xyz = r2.www ? r0.xyz : v7.xyz;
  r1.x = dot(r0.xyz, r4.xzw);
  r1.x = r1.x * 0.497500002 + 0.5;
  r2.xyz = r7.xyw * r6.xyz;
  r1.y = cmp(0.00999999978 < r6.w);
  r1.y = r1.y ? r7.z : 0;
  r1.z = r1.y ? r6.w : 0;
  r2.w = cmp(0 != cb0[93].y);
  r3.w = v1.x * r0.w;
  r0.w = r2.w ? r3.w : r0.w;
  r2.w = cmp(r0.w < 0.0500000007);
  r3.w = cmp(0.949999988 < r0.w);
  r0.w = r1.x + r0.w;
  r0.w = 0.5 * r0.w;
  r0.w = r3.w ? 1 : r0.w;
  r0.w = r2.w ? 0 : r0.w;
  r1.x = cmp(r0.w < cb0[93].z);
  r0.w = cb0[93].z + -r0.w;
  r10.y = r0.w / cb0[93].z;
  r0.w = cmp(0 != cb0[96].y);
  r2.w = v1.y + v1.y;
  r2.w = max(0.00999999978, r2.w);
  r2.w = cb0[96].x * r2.w;
  r0.w = r0.w ? r2.w : cb0[96].x;
  r0.w = r10.y / r0.w;
  r0.w = min(1, r0.w);
  r10.z = 1 + -r0.w;
  r10.yz = r1.xx ? r10.yz : float2(0,1);
  r10.x = r1.x ? 1.000000 : 0;
  r0.w = cmp(9.99999975e-06 < v8.w);
  r11.xy = r0.ww ? float2(1,0) : r10.xz;
  r0.w = cmp(0.5 < cb0[148].w);
  r1.x = cb0[2].w + cb0[2].w;
  r1.x = min(1, r1.x);
  r0.w = r0.w ? r1.x : 1;
  r1.x = cmp(0.899999976 < r8.x);
  if (r1.x != 0) {
    r4.xz = cb2[15].xy * r0.yy;
    r4.xz = cb2[14].xy * r0.xx + r4.xz;
    r12.yz = cb2[16].xy * r0.zz + r4.xz;
    r12.x = cb0[137].z * r12.y;
    r4.xz = r12.xz * float2(0.5,0.5) + float2(0.5,0.5);
    r1.x = t4.Sample(s5_s, r4.xz).x;
    r1.x = saturate(cb0[137].y * r1.x);
    r4.xzw = -cb0[139].xyz + cb0[138].xyz;
    r4.xzw = r1.xxx * r4.xzw + cb0[139].xyz;
    r4.xzw = r4.xzw * r2.xyz;
    r1.x = dot(r0.xyz, r5.xyz);
    r1.x = max(0.00100000005, r1.x);
    r1.x = log2(r1.x);
    r1.x = cb0[140].w * r1.x;
    r1.x = exp2(r1.x);
    r12.x = saturate(cb0[141].w * r1.x);
    r1.x = cmp(cb0[142].z < r12.x);
    r2.w = cmp(0 != cb0[142].y);
    r12.y = 0.5;
    r10.xzw = t5.Sample(s6_s, r12.xy).xyz;
    r10.xzw = r10.xzw * r8.zzz;
    r12.xyz = cb0[141].xyz * r12.xxx;
    r12.xyz = r12.xyz * r8.zzz;
    r10.xzw = r2.www ? r10.xzw : r12.xyz;
    r10.xzw = r1.xxx ? cb0[143].xyz : r10.xzw;
    r1.x = -1 + cb0[142].x;
    r1.x = v8.w * r1.x + 1;
    r10.xzw = r10.xzw * r1.xxx;
    r1.x = cmp(0 != cb0[96].z);
    r12.xyz = float3(-1,-1,-1) + cb0[140].xyz;
    r12.xyz = r10.yyy * r12.xyz + float3(1,1,1);
    r12.xyz = r1.xxx ? r12.xyz : cb0[140].xyz;
    r13.xyz = r12.xyz * r4.xzw;
    r1.x = cmp(0 != r11.x);
    r12.xyz = r1.xxx ? r12.xyz : cb0[145].xxx;
    r14.xyz = r12.xyz * r4.xzw;
    r1.x = cmp(r0.w < 1);
    r4.xzw = r4.xzw * r12.xyz + -r13.xyz;
    r4.xzw = r0.www * r4.xzw + r13.xyz;
    r4.xzw = r1.xxx ? r4.xzw : r14.xyz;
    r10.xyz = cb0[145].xxx * r10.xzw;
  } else {
    r1.x = -1 + r1.w;
    r2.w = r1.x * 0.100000001 + 0.0500000007;
    r3.w = cmp(0 != cb0[94].w);
    if (r3.w != 0) {
      r5.w = r1.x * 0.100000001 + 0.550000012;
      r11.z = 1 + -r2.w;
      r11.w = 1 + -r5.w;
      r12.xyz = t6.Sample(s4_s, r11.yz).xyz;
      r14.xyz = t6.Sample(s4_s, r11.yw).xyz;
      r12.xyz = -r14.xyz + r12.xyz;
      r12.xyz = cb0[146].zzz * r12.xyz + r14.xyz;
      r14.xz = float2(0,0);
      r14.yw = r11.zw;
      r15.xyz = t6.Sample(s4_s, r14.xy).xyz;
      r14.xyz = t6.Sample(s4_s, r14.zw).xyz;
      r15.xyz = r15.xyz + -r14.xyz;
      r14.xyz = cb0[146].zzz * r15.xyz + r14.xyz;
    } else {
      r15.x = 1 + -r2.w;
      r15.y = r11.y;
      r12.xyz = t6.Sample(s4_s, r15.yx).xyz;
      r15.z = 0;
      r14.xyz = t6.Sample(s4_s, r15.zx).xyz;
    }
    r5.w = cmp(r0.w < 1);
    if (r5.w != 0) {
      if (r3.w != 0) {
        r1.x = r1.x * 0.100000001 + 0.550000012;
        r15.y = 1 + -r2.w;
        r15.w = 1 + -r1.x;
        r15.xz = float2(0,0);
        r11.yzw = t6.Sample(s4_s, r15.xy).xyz;
        r15.xyz = t6.Sample(s4_s, r15.zw).xyz;
        r11.yzw = -r15.xyz + r11.yzw;
        r11.yzw = cb0[146].zzz * r11.yzw + r15.xyz;
      } else {
        r15.y = 1 + -r2.w;
        r15.x = 0;
        r11.yzw = t6.Sample(s4_s, r15.xy).xyz;
      }
    } else {
      r11.yzw = float3(0,0,0);
    }
    r13.xyz = r14.xyz * r2.xyz;
    r1.x = cmp(0 != r11.x);
    r12.xyz = r12.xyz * r2.xyz;
    r14.xyz = cb0[145].xxx * r2.xyz;
    r12.xyz = r1.xxx ? r12.xyz : r14.xyz;
    r14.xyz = r11.yzw * r2.xyz;
    r11.xyz = -r2.xyz * r11.yzw + r12.xyz;
    r11.xyz = r0.www * r11.xyz + r14.xyz;
    r4.xzw = r5.www ? r11.xyz : r12.xyz;
    r1.x = cmp(r1.w == 1.000000);
    r2.w = r9.z ? cb0[125].w : cb0[131].w;
    r3.w = r9.z ? cb0[127].x : cb0[133].x;
    r11.xyzw = r9.zzzz ? cb0[126].xyzw : cb0[132].xyzw;
    r2.w = r9.y ? cb0[119].w : r2.w;
    r3.w = r9.y ? cb0[121].x : r3.w;
    r11.xyzw = r9.yyyy ? cb0[120].xyzw : r11.xyzw;
    r12.x = r9.x ? cb0[113].w : r2.w;
    r12.y = r9.x ? cb0[114].x : r11.x;
    r2.w = r9.x ? cb0[115].x : r3.w;
    r11.xyz = r9.xxx ? cb0[114].yzw : r11.yzw;
    r11.xyz = r1.xxx ? cb0[97].yzw : r11.xyz;
    r8.yw = r1.xx ? cb0[99].xy : r12.xy;
    r1.x = r1.x ? cb0[98].w : r2.w;
    r2.w = dot(r0.xyz, r5.xyz);
    r2.w = max(9.99999975e-05, r2.w);
    r2.w = log2(r2.w);
    r2.w = r8.y * r2.w;
    r2.w = exp2(r2.w);
    r3.w = 1 + -r8.z;
    r2.w = cmp(r3.w < r2.w);
    r5.xyz = r11.xyz * r8.www;
    r5.xyz = r5.xyz * r8.xxx;
    r6.xyz = r6.xyz * r7.xyw + float3(-1,-1,-1);
    r6.xyz = r1.xxx * r6.xyz + float3(1,1,1);
    r5.xyz = r6.xyz * r5.xyz;
    r5.w = 1;
    r5.xyzw = r2.wwww ? r5.xyzw : 0;
    r5.xyz = cb0[145].xxx * r5.xyz;
    r10.xyz = r5.xyz * r5.www;
  }
  r2.xyz = cb0[104].xyz * r2.xyz;
  r2.xyz = cb0[103].zzz * r2.xyz;
  r5.xyz = cb0[111].xxx * cb0[111].yzw;
  r6.xyz = cb0[117].xyz * cb0[116].www;
  r7.xyz = cb0[123].xyz * cb0[122].www;
  r8.xyz = cb0[129].xyz * cb0[128].www;
  r1.x = cmp(r1.w == 1.000000);
  r11.xyz = cb0[105].xyz * cb0[103].www;
  r11.xyz = r11.xyz * r2.xyz;
  r5.xyz = r5.xyz * r2.xyz;
  r6.xyz = r6.xyz * r2.xyz;
  r7.xyz = r7.xyz * r2.xyz;
  r8.xyz = r8.xyz * r2.xyz;
  r2.xyz = r9.www ? r8.xyz : r2.xyz;
  r2.xyz = r9.zzz ? r7.xyz : r2.xyz;
  r2.xyz = r9.yyy ? r6.xyz : r2.xyz;
  r2.xyz = r9.xxx ? r5.xyz : r2.xyz;
  r2.xyz = r1.xxx ? r11.xyz : r2.xyz;
  r1.x = cmp(r0.w < 1);
  r5.xyz = r10.xyz * r0.www;
  r5.xyz = r1.xxx ? r5.xyz : r10.xyz;
  r4.xzw = r5.xyz + r4.xzw;
  r2.xyz = -r4.xzw + r2.xyz;
  r2.xyz = r1.zzz * r2.xyz + r4.xzw;
  r1.xyw = r1.yyy ? r2.xyz : r4.xzw;
  r0.w = saturate(dot(r3.xyz, r0.xyz));
  r0.w = 1 + -r0.w;
  r0.w = max(9.99999975e-05, r0.w);
  r0.w = log2(r0.w);
  r0.w = cb0[159].x * r0.w;
  r0.w = exp2(r0.w);
  r2.xyz = max(cb0[158].xyz, cb0[157].xyz);
  r2.xyz = r2.xyz * r0.www;
  r3.xyz = r2.xyz * cb0[159].yyy + r1.xyw;
  r0.w = 1 + -r1.z;
  r0.w = cb0[159].z * r0.w + r1.z;
  r1.xyz = r2.xyz * cb0[159].yyy + r13.xyz;
  r1.w = max(r3.y, r3.z);
  r2.w = max(r3.x, r1.w);
  r1.w = cmp(1 < r2.w);
  r2.xyz = r3.xyz / r2.www;
  r3.w = 1;
  r2.xyzw = r1.wwww ? r2.xyzw : r3.xyzw;
  r1.xyz = cb0[99].zzz * r5.xyz + r1.xyz;
  r3.xyz = r1.xyz + -r2.xyz;
  r3.xyz = cb0[154].xxx * r3.xyz + r2.xyz;
  r1.xyz = r4.yyy ? r3.xyz : r1.xyz;
  r1.w = saturate(0.0500000007 * r2.w);
  o1.w = sqrt(r1.w);
  o0.xyz = r0.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r0.x = cmp(0 != cb0[82].x);
  r0.y = 0.00392156886 * cb0[82].y;
  o2.z = r0.x ? r0.y : r1.z;
  o0.w = r9.x ? 0.333000 : 0;
  o1.xyz = r2.xyz;
  o2.xy = r1.xy;
  o2.w = r0.w;
  o3.x = 0.0156862754;
  o4.x = r0.w;
  o5.x = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Jul 19 22:48:28 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float     zw
// COLOR                    0   xyzw        1     NONE   float   xy
// TEXCOORD                 0   xyzw        2     NONE   float
// TEXCOORD                 1   xyzw        3     NONE   float
// TEXCOORD                 2   xyzw        4     NONE   float
// TEXCOORD                 3   xyzw        5     NONE   float   xy w
// TEXCOORD                 4   xyzw        6     NONE   float
// TEXCOORD                 5   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyzw        8     NONE   float      w
// TEXCOORD                11   xyzw        9     NONE   float   xyz
// TEXCOORD                12   xyzw       10     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   x           3   TARGET   float   x
// SV_Target                4   x           4   TARGET   float   x
// SV_Target                5   x           5   TARGET   float   x
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[160], immediateIndexed
dcl_constantbuffer CB1[9], immediateIndexed
dcl_constantbuffer CB2[17], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.zw, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v5.xyw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.w
dcl_input_ps linear v9.xyz
dcl_input_ps linear v10.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.x
dcl_output o5.x
dcl_temps 16
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[134].x
if_nz r0.x
  lt r0.x, cb0[134].y, l(0.950000)
  if_nz r0.x
    div r0.xy, v5.yxyy, v5.wwww
    mul r0.xy, r0.xyxx, cb1[7].yxyy
    mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
    ge r0.zw, r0.xxxy, -r0.xxxy
    frc r0.xy, |r0.xyxx|
    movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
    mul r0.xy, r0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
    ftou r0.xy, r0.xyxx
    dp4 r1.x, cb0[17].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.y, cb0[18].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.z, cb0[19].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.w, cb0[20].xyzw, icb[r0.y + 0].xyzw
    dp4 r0.x, r1.xyzw, icb[r0.x + 0].xyzw
    mad r0.x, cb0[134].y, l(17.000000), -r0.x
    add r0.x, r0.x, l(-0.010000)
    lt r0.x, r0.x, l(0.000000)
    discard_nz r0.x
  endif
endif
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[32].y
if_nz r0.x
  sample_indexable(texture2d)(float,float,float,float) r0.xy, v10.xyxx, t0.xzyw, s1
  add r0.z, -cb0[89].y, l(1.000000)
  max r1.z, r0.z, l(0.001000)
  mad r1.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp3 r0.x, r1.xyzx, r1.xyzx
  rsq r0.x, r0.x
  mul r0.xyz, r0.xxxx, r1.xyzx
else
  add r1.xy, v10.yxyy, cb0[32].zzzz
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, v10.xyxx, t0.xyzw, s1
  mov r1.zw, v10.xxxy
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.zxzz, t0.xyzw, s1
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.ywyy, t0.xyzw, s1
  add r1.xyz, -r2.xyzx, r1.xyzx
  add r2.xyz, -r2.xyzx, r3.xyzx
  eq r3.xy, cb0[32].xxxx, l(2.000000, 1.000000, 0.000000, 0.000000)
  movc r0.w, r3.y, r1.y, r1.x
  movc r0.w, r3.x, r1.z, r0.w
  movc r1.x, r3.y, r2.y, r2.x
  movc r1.x, r3.x, r2.z, r1.x
  mul r2.x, r0.w, cb0[32].w
  mul r2.y, r1.x, cb0[32].w
  mov r2.z, l(0)
  add r1.xyz, -r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r0.xyz, r0.wwww, r1.xyzx
endif
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v10.xyxx, t1.xyzw, s0
eq r2.xy, cb0[32].xxxx, l(2.000000, 1.000000, 0.000000, 0.000000)
movc r0.w, r2.y, r1.y, r1.x
movc r0.w, r2.x, r1.z, r0.w
deriv_rtx_coarse r1.xyz, v9.yzxy
deriv_rty_coarse r2.xyz, v9.zxyz
deriv_rtx_coarse r3.xy, v10.xyxx
deriv_rty_coarse r3.zw, v10.xxxy
mul r4.xyz, r2.xyzx, v7.yzxy
mad r2.xyz, r2.zxyz, v7.zxyz, -r4.xyzx
mul r4.xyz, r1.xyzx, v7.zxyz
mad r1.xyz, v7.yzxy, r1.yzxy, -r4.xyzx
mul r4.xyz, r3.zzzz, r1.xyzx
mad r4.xyz, r2.xyzx, r3.xxxx, r4.xyzx
mul r1.xyz, r3.wwww, r1.xyzx
mad r1.xyz, r2.xyzx, r3.yyyy, r1.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
dp3 r2.x, r1.xyzx, r1.xyzx
max r1.w, r1.w, r2.x
sqrt r1.w, r1.w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r2.xyz, r1.wwww, r4.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, v9.xyzx, v9.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v9.xyzx
lt r4.xy, l(0.000000, 0.500000, 0.000000, 0.000000), cb0[152].wwww
ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), v7.w
movc r5.xyz, r2.wwww, cb0[153].xyzx, cb0[152].xyzx
movc r4.xzw, r4.xxxx, r5.xxyz, cb0[148].xxyz
mad r5.xyz, v9.xyzx, r1.wwww, r4.xzwx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
add r1.w, cb0[134].z, l(-1.000000)
sample_b_indexable(texture2d)(float,float,float,float) r6.xyzw, v10.xyxx, t2.xyzw, s2, r1.w
div r2.w, v0.z, v0.w
mad r2.w, cb1[8].z, r2.w, cb1[8].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mad r3.w, cb0[90].x, r2.w, cb0[89].z
min r5.w, cb0[90].y, l(0.990000)
min r3.w, r3.w, r5.w
ge r2.w, r2.w, cb0[90].z
and r2.w, r2.w, l(0x3f800000)
mul r5.w, r2.w, cb0[89].w
add r3.w, -r3.w, l(1.000000)
add r0.w, r0.w, -r3.w
mad r0.w, cb0[89].w, r2.w, r0.w
add r2.w, r5.w, r5.w
div_sat r0.w, r0.w, r2.w
mad r7.xyz, cb0[91].xyzx, r6.xyzx, -r6.xyzx
mad r6.xyz, r0.wwww, r7.xyzx, r6.xyzx
eq r7.xyz, cb0[86].xxxx, l(3.000000, 1.000000, 2.000000, 0.000000)
mul r0.w, r6.w, cb0[99].w
add r8.xyz, -r6.xyzx, cb0[100].xyzx
mad r8.xyz, r0.wwww, r8.xyzx, r6.xyzx
movc r6.xyz, r7.xxxx, r8.xyzx, r6.xyzx
add r0.w, r6.w, -cb0[86].y
lt r0.w, r0.w, l(0.000000)
and r0.w, r7.y, r0.w
discard_nz r0.w
sample_b_indexable(texture2d)(float,float,float,float) r8.xyzw, v10.xyxx, t3.xyzw, s3, r1.w
ge r0.w, l(0.001000), cb0[93].x
and r0.w, r0.w, l(0x3f800000)
mad r0.w, r0.w, -r8.y, r8.y
ne r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[110].x
ge r9.xyzw, r8.wwww, l(0.800000, 0.400000, 0.200000, 0.600000)
and r1.w, r1.w, r9.x
movc r1.w, r1.w, l(2.000000), l(1.000000)
ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[115].w
and r2.w, r9.y, r2.w
lt r7.xyw, r8.wwww, l(0.600000, 0.400000, 0.000000, 0.800000)
and r2.w, r2.w, r7.x
movc r1.w, r2.w, l(3.000000), r1.w
ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[121].w
and r2.w, r9.z, r2.w
and r2.w, r7.y, r2.w
movc r1.w, r2.w, l(4.000000), r1.w
ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[127].w
and r2.w, r9.w, r2.w
and r2.w, r7.w, r2.w
movc r1.w, r2.w, l(5.000000), r1.w
eq r9.xyzw, r1.wwww, l(2.000000, 3.000000, 4.000000, 5.000000)
movc r7.xyw, r9.xxxx, cb0[110].yzyw, cb0[83].xyxz
movc r7.xyw, r9.yyyy, cb0[116].xyxz, r7.xyxw
movc r7.xyw, r9.zzzz, cb0[122].xyxz, r7.xyxw
movc r7.xyw, r9.wwww, cb0[128].xyxz, r7.xyxw
ge r2.w, l(0.990000), r0.z
mul r1.xyz, r0.yyyy, r1.xyzx
mad r1.xyz, r0.xxxx, r2.xyzx, r1.xyzx
mad r0.xyz, r0.zzzz, v7.xyzx, r1.xyzx
dp3 r1.x, r0.xyzx, r0.xyzx
rsq r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx
movc r0.xyz, r2.wwww, r0.xyzx, v7.xyzx
dp3 r1.x, r0.xyzx, r4.xzwx
mad r1.x, r1.x, l(0.497500), l(0.500000)
mul r2.xyz, r6.xyzx, r7.xywx
lt r1.y, l(0.010000), r6.w
and r1.y, r1.y, r7.z
and r1.z, r6.w, r1.y
ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[93].y
mul r3.w, r0.w, v1.x
movc r0.w, r2.w, r3.w, r0.w
lt r2.w, r0.w, l(0.050000)
lt r3.w, l(0.950000), r0.w
add r0.w, r0.w, r1.x
mul r0.w, r0.w, l(0.500000)
movc r0.w, r3.w, l(1.000000), r0.w
movc r0.w, r2.w, l(0), r0.w
lt r1.x, r0.w, cb0[93].z
add r0.w, -r0.w, cb0[93].z
div r10.y, r0.w, cb0[93].z
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[96].y
add r2.w, v1.y, v1.y
max r2.w, r2.w, l(0.010000)
mul r2.w, r2.w, cb0[96].x
movc r0.w, r0.w, r2.w, cb0[96].x
div r0.w, r10.y, r0.w
min r0.w, r0.w, l(1.000000)
add r10.z, -r0.w, l(1.000000)
movc r10.yz, r1.xxxx, r10.yyzy, l(0,0,1.000000,0)
and r10.x, r1.x, l(0x3f800000)
lt r0.w, l(0.000010), v8.w
movc r11.xy, r0.wwww, l(1.000000,0,0,0), r10.xzxx
lt r0.w, l(0.500000), cb0[148].w
add r1.x, cb0[2].w, cb0[2].w
min r1.x, r1.x, l(1.000000)
movc r0.w, r0.w, r1.x, l(1.000000)
lt r1.x, l(0.900000), r8.x
if_nz r1.x
  mul r4.xz, r0.yyyy, cb2[15].xxyx
  mad r4.xz, cb2[14].xxyx, r0.xxxx, r4.xxzx
  mad r12.yz, cb2[16].xxyx, r0.zzzz, r4.xxzx
  mul r12.x, r12.y, cb0[137].z
  mad r4.xz, r12.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r1.x, r4.xzxx, t4.xyzw, s5
  mul_sat r1.x, r1.x, cb0[137].y
  add r4.xzw, cb0[138].xxyz, -cb0[139].xxyz
  mad r4.xzw, r1.xxxx, r4.xxzw, cb0[139].xxyz
  mul r4.xzw, r2.xxyz, r4.xxzw
  dp3 r1.x, r0.xyzx, r5.xyzx
  max r1.x, r1.x, l(0.001000)
  log r1.x, r1.x
  mul r1.x, r1.x, cb0[140].w
  exp r1.x, r1.x
  mul_sat r12.x, r1.x, cb0[141].w
  lt r1.x, cb0[142].z, r12.x
  ne r2.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[142].y
  mov r12.y, l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r10.xzw, r12.xyxx, t5.xwyz, s6
  mul r10.xzw, r8.zzzz, r10.xxzw
  mul r12.xyz, r12.xxxx, cb0[141].xyzx
  mul r12.xyz, r8.zzzz, r12.xyzx
  movc r10.xzw, r2.wwww, r10.xxzw, r12.xxyz
  movc r10.xzw, r1.xxxx, cb0[143].xxyz, r10.xxzw
  add r1.x, cb0[142].x, l(-1.000000)
  mad r1.x, v8.w, r1.x, l(1.000000)
  mul r10.xzw, r1.xxxx, r10.xxzw
  ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[96].z
  add r12.xyz, cb0[140].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r12.xyz, r10.yyyy, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r12.xyz, r1.xxxx, r12.xyzx, cb0[140].xyzx
  mul r13.xyz, r4.xzwx, r12.xyzx
  ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), r11.x
  movc r12.xyz, r1.xxxx, r12.xyzx, cb0[145].xxxx
  mul r14.xyz, r4.xzwx, r12.xyzx
  lt r1.x, r0.w, l(1.000000)
  mad r4.xzw, r4.xxzw, r12.xxyz, -r13.xxyz
  mad r4.xzw, r0.wwww, r4.xxzw, r13.xxyz
  movc r4.xzw, r1.xxxx, r4.xxzw, r14.xxyz
  mul r10.xyz, r10.xzwx, cb0[145].xxxx
else
  add r1.x, r1.w, l(-1.000000)
  mad r2.w, r1.x, l(0.100000), l(0.050000)
  ne r3.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[94].w
  if_nz r3.w
    mad r5.w, r1.x, l(0.100000), l(0.550000)
    add r11.z, -r2.w, l(1.000000)
    add r11.w, -r5.w, l(1.000000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.yzyy, t6.xyzw, s4
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r11.ywyy, t6.xyzw, s4
    add r12.xyz, r12.xyzx, -r14.xyzx
    mad r12.xyz, cb0[146].zzzz, r12.xyzx, r14.xyzx
    mov r14.xz, l(0,0,0,0)
    mov r14.yw, r11.zzzw
    sample_indexable(texture2d)(float,float,float,float) r15.xyz, r14.xyxx, t6.xyzw, s4
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.zwzz, t6.xyzw, s4
    add r15.xyz, -r14.xyzx, r15.xyzx
    mad r14.xyz, cb0[146].zzzz, r15.xyzx, r14.xyzx
  else
    add r15.x, -r2.w, l(1.000000)
    mov r15.y, r11.y
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r15.yxyy, t6.xyzw, s4
    mov r15.z, l(0)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r15.zxzz, t6.xyzw, s4
  endif
  lt r5.w, r0.w, l(1.000000)
  if_nz r5.w
    if_nz r3.w
      mad r1.x, r1.x, l(0.100000), l(0.550000)
      add r15.y, -r2.w, l(1.000000)
      add r15.w, -r1.x, l(1.000000)
      mov r15.xz, l(0,0,0,0)
      sample_indexable(texture2d)(float,float,float,float) r11.yzw, r15.xyxx, t6.wxyz, s4
      sample_indexable(texture2d)(float,float,float,float) r15.xyz, r15.zwzz, t6.xyzw, s4
      add r11.yzw, r11.yyzw, -r15.xxyz
      mad r11.yzw, cb0[146].zzzz, r11.yyzw, r15.xxyz
    else
      add r15.y, -r2.w, l(1.000000)
      mov r15.x, l(0)
      sample_indexable(texture2d)(float,float,float,float) r11.yzw, r15.xyxx, t6.wxyz, s4
    endif
  else
    mov r11.yzw, l(0,0,0,0)
  endif
  mul r13.xyz, r2.xyzx, r14.xyzx
  ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), r11.x
  mul r12.xyz, r2.xyzx, r12.xyzx
  mul r14.xyz, r2.xyzx, cb0[145].xxxx
  movc r12.xyz, r1.xxxx, r12.xyzx, r14.xyzx
  mul r14.xyz, r2.xyzx, r11.yzwy
  mad r11.xyz, -r2.xyzx, r11.yzwy, r12.xyzx
  mad r11.xyz, r0.wwww, r11.xyzx, r14.xyzx
  movc r4.xzw, r5.wwww, r11.xxyz, r12.xxyz
  eq r1.x, r1.w, l(1.000000)
  movc r2.w, r9.z, cb0[125].w, cb0[131].w
  movc r3.w, r9.z, cb0[127].x, cb0[133].x
  movc r11.xyzw, r9.zzzz, cb0[126].xyzw, cb0[132].xyzw
  movc r2.w, r9.y, cb0[119].w, r2.w
  movc r3.w, r9.y, cb0[121].x, r3.w
  movc r11.xyzw, r9.yyyy, cb0[120].xyzw, r11.xyzw
  movc r12.x, r9.x, cb0[113].w, r2.w
  movc r12.y, r9.x, cb0[114].x, r11.x
  movc r2.w, r9.x, cb0[115].x, r3.w
  movc r11.xyz, r9.xxxx, cb0[114].yzwy, r11.yzwy
  movc r11.xyz, r1.xxxx, cb0[97].yzwy, r11.xyzx
  movc r8.yw, r1.xxxx, cb0[99].xxxy, r12.xxxy
  movc r1.x, r1.x, cb0[98].w, r2.w
  dp3 r2.w, r0.xyzx, r5.xyzx
  max r2.w, r2.w, l(0.000100)
  log r2.w, r2.w
  mul r2.w, r2.w, r8.y
  exp r2.w, r2.w
  add r3.w, -r8.z, l(1.000000)
  lt r2.w, r3.w, r2.w
  mul r5.xyz, r8.wwww, r11.xyzx
  mul r5.xyz, r8.xxxx, r5.xyzx
  mad r6.xyz, r6.xyzx, r7.xywx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r6.xyz, r1.xxxx, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r5.xyz, r5.xyzx, r6.xyzx
  mov r5.w, l(1.000000)
  and r5.xyzw, r2.wwww, r5.xyzw
  mul r5.xyz, r5.xyzx, cb0[145].xxxx
  mul r10.xyz, r5.wwww, r5.xyzx
endif
mul r2.xyz, r2.xyzx, cb0[104].xyzx
mul r2.xyz, r2.xyzx, cb0[103].zzzz
mul r5.xyz, cb0[111].yzwy, cb0[111].xxxx
mul r6.xyz, cb0[116].wwww, cb0[117].xyzx
mul r7.xyz, cb0[122].wwww, cb0[123].xyzx
mul r8.xyz, cb0[128].wwww, cb0[129].xyzx
eq r1.x, r1.w, l(1.000000)
mul r11.xyz, cb0[103].wwww, cb0[105].xyzx
mul r11.xyz, r2.xyzx, r11.xyzx
mul r5.xyz, r2.xyzx, r5.xyzx
mul r6.xyz, r2.xyzx, r6.xyzx
mul r7.xyz, r2.xyzx, r7.xyzx
mul r8.xyz, r2.xyzx, r8.xyzx
movc r2.xyz, r9.wwww, r8.xyzx, r2.xyzx
movc r2.xyz, r9.zzzz, r7.xyzx, r2.xyzx
movc r2.xyz, r9.yyyy, r6.xyzx, r2.xyzx
movc r2.xyz, r9.xxxx, r5.xyzx, r2.xyzx
movc r2.xyz, r1.xxxx, r11.xyzx, r2.xyzx
lt r1.x, r0.w, l(1.000000)
mul r5.xyz, r0.wwww, r10.xyzx
movc r5.xyz, r1.xxxx, r5.xyzx, r10.xyzx
add r4.xzw, r4.xxzw, r5.xxyz
add r2.xyz, r2.xyzx, -r4.xzwx
mad r2.xyz, r1.zzzz, r2.xyzx, r4.xzwx
movc r1.xyw, r1.yyyy, r2.xyxz, r4.xzxw
dp3_sat r0.w, r3.xyzx, r0.xyzx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000100)
log r0.w, r0.w
mul r0.w, r0.w, cb0[159].x
exp r0.w, r0.w
max r2.xyz, cb0[157].xyzx, cb0[158].xyzx
mul r2.xyz, r0.wwww, r2.xyzx
mad r3.xyz, r2.xyzx, cb0[159].yyyy, r1.xywx
add r0.w, -r1.z, l(1.000000)
mad r0.w, cb0[159].z, r0.w, r1.z
mad r1.xyz, r2.xyzx, cb0[159].yyyy, r13.xyzx
max r1.w, r3.z, r3.y
max r2.w, r1.w, r3.x
lt r1.w, l(1.000000), r2.w
div r2.xyz, r3.xyzx, r2.wwww
mov r3.w, l(1.000000)
movc r2.xyzw, r1.wwww, r2.xyzw, r3.xyzw
mad r1.xyz, cb0[99].zzzz, r5.xyzx, r1.xyzx
add r3.xyz, -r2.xyzx, r1.xyzx
mad r3.xyz, cb0[154].xxxx, r3.xyzx, r2.xyzx
movc r1.xyz, r4.yyyy, r3.xyzx, r1.xyzx
mul_sat r1.w, r2.w, l(0.050000)
sqrt o1.w, r1.w
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[82].x
mul r0.y, cb0[82].y, l(0.00392156886)
movc o2.z, r0.x, r0.y, r1.z
and o0.w, r9.x, l(0x3eaa7efa)
mov o1.xyz, r2.xyzx
mov o2.xy, r1.xyxx
mov o2.w, r0.w
mov o3.x, l(0.0156862754)
mov o4.x, r0.w
mov o5.x, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
