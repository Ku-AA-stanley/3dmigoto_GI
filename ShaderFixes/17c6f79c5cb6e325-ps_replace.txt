// ---- Created with 3Dmigoto v1.3.16 on Sat Jul 20 09:59:58 2024
Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[17];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[159];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float4 v5 : TEXCOORD3,
  float4 v6 : TEXCOORD4,
  float4 v7 : TEXCOORD5,
  float4 v8 : TEXCOORD6,
  float4 v9 : TEXCOORD11,
  float4 v10 : TEXCOORD12,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float o3 : SV_Target3,
  out float o4 : SV_Target4,
  out float o5 : SV_Target5)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cmp(0 != cb0[133].x);
  r0.x = dot(v9.xyz, v9.xyz);
  r0.x = rsqrt(r0.x);
  r0.yzw = v9.xyz * r0.xxx;
  r1.xy = cmp(float2(0,0.5) < cb0[151].ww);
  r1.z = cmp(0 != v7.w);
  r2.xyz = r1.zzz ? cb0[152].xyz : cb0[151].xyz;
  r1.xzw = r1.xxx ? r2.xyz : cb0[147].xyz;
  r1.xzw = v9.xyz * r0.xxx + r1.xzw;
  r0.x = dot(r1.xzw, r1.xzw);
  r0.x = rsqrt(r0.x);
  r1.xzw = r1.xzw * r0.xxx;
  r0.x = -1 + cb0[133].z;
  r2.xyzw = t0.SampleBias(s0_s, v10.xy, r0.x).xyzw;
  r3.xyz = cmp(cb0[85].xxx == float3(3,1,2));
  r3.w = cb0[98].w * r2.w;
  r4.xyz = cb0[99].xyz + -r2.xyz;
  r4.xyz = r3.www * r4.xyz + r2.xyz;
  r2.xyz = r3.xxx ? r4.xyz : r2.xyz;
  r3.x = -cb0[85].y + r2.w;
  r3.x = cmp(r3.x < 0);
  r3.x = r3.y ? r3.x : 0;
  if (r3.x != 0) discard;
  r4.xyzw = t1.SampleBias(s1_s, v10.xy, r0.x).xyzw;
  r0.x = cmp(0.00100000005 >= cb0[92].x);
  r0.x = r0.x ? 1.000000 : 0;
  r0.x = r0.x * -r4.y + r4.y;
  r3.x = cmp(0 != cb0[109].x);
  r5.xyzw = cmp(r4.wwww >= float4(0.800000012,0.400000006,0.200000003,0.600000024));
  r3.x = r3.x ? r5.x : 0;
  r3.x = r3.x ? 2 : 1;
  r3.y = cmp(0 != cb0[114].w);
  r3.y = r5.y ? r3.y : 0;
  r6.xyz = cmp(r4.www < float3(0.600000024,0.400000006,0.800000012));
  r3.y = r3.y ? r6.x : 0;
  r3.x = r3.y ? 3 : r3.x;
  r3.y = cmp(0 != cb0[120].w);
  r3.y = r5.z ? r3.y : 0;
  r3.y = r6.y ? r3.y : 0;
  r3.x = r3.y ? 4 : r3.x;
  r3.y = cmp(0 != cb0[126].w);
  r3.y = r5.w ? r3.y : 0;
  r3.y = r6.z ? r3.y : 0;
  r3.x = r3.y ? 5 : r3.x;
  r5.xyzw = cmp(r3.xxxx == float4(2,3,4,5));
  r6.xyz = r5.xxx ? cb0[109].yzw : cb0[82].xyz;
  r6.xyz = r5.yyy ? cb0[115].xyz : r6.xyz;
  r6.xyz = r5.zzz ? cb0[121].xyz : r6.xyz;
  r6.xyz = r5.www ? cb0[127].xyz : r6.xyz;
  r7.xyz = r6.xyz * r2.xyz;
  r3.y = cmp(0.00999999978 < r2.w);
  r3.y = r3.y ? r3.z : 0;
  r2.w = r3.y ? r2.w : 0;
  r3.z = cmp(0 != cb0[92].y);
  r3.w = v1.x * r0.x;
  r0.x = r3.z ? r3.w : r0.x;
  r3.z = cmp(r0.x < 0.0500000007);
  r3.w = cmp(0.949999988 < r0.x);
  r0.x = v9.w + r0.x;
  r0.x = 0.5 * r0.x;
  r0.x = r3.w ? 1 : r0.x;
  r0.x = r3.z ? 0 : r0.x;
  r3.z = cmp(r0.x < cb0[92].z);
  r0.x = cb0[92].z + -r0.x;
  r8.y = r0.x / cb0[92].z;
  r0.x = cmp(0 != cb0[95].y);
  r3.w = v1.y + v1.y;
  r3.w = max(0.00999999978, r3.w);
  r3.w = cb0[95].x * r3.w;
  r0.x = r0.x ? r3.w : cb0[95].x;
  r0.x = r8.y / r0.x;
  r0.x = min(1, r0.x);
  r8.z = 1 + -r0.x;
  r8.yz = r3.zz ? r8.yz : float2(0,1);
  r8.x = r3.z ? 1.000000 : 0;
  r0.x = cmp(9.99999975e-06 < v8.w);
  r9.xy = r0.xx ? float2(1,0) : r8.xz;
  r0.x = cmp(0.5 < cb0[147].w);
  r3.z = cb0[2].w + cb0[2].w;
  r3.z = min(1, r3.z);
  r0.x = r0.x ? r3.z : 1;
  r3.z = cmp(0.899999976 < r4.x);
  if (r3.z != 0) {
    r3.zw = cb2[15].xy * v7.yy;
    r3.zw = cb2[14].xy * v7.xx + r3.zw;
    r10.yz = cb2[16].xy * v7.zz + r3.zw;
    r10.x = cb0[136].z * r10.y;
    r3.zw = r10.xz * float2(0.5,0.5) + float2(0.5,0.5);
    r3.z = t2.Sample(s3_s, r3.zw).x;
    r3.z = saturate(cb0[136].y * r3.z);
    r8.xzw = -cb0[138].xyz + cb0[137].xyz;
    r8.xzw = r3.zzz * r8.xzw + cb0[138].xyz;
    r8.xzw = r8.xzw * r7.xyz;
    r3.z = dot(v7.xyz, r1.xzw);
    r3.z = max(0.00100000005, r3.z);
    r3.z = log2(r3.z);
    r3.z = cb0[139].w * r3.z;
    r3.z = exp2(r3.z);
    r10.x = saturate(cb0[140].w * r3.z);
    r3.z = cmp(cb0[141].z < r10.x);
    r3.w = cmp(0 != cb0[141].y);
    r10.y = 0.5;
    r10.yzw = t3.Sample(s4_s, r10.xy).xyz;
    r10.yzw = r10.yzw * r4.zzz;
    r11.xyz = cb0[140].xyz * r10.xxx;
    r11.xyz = r11.xyz * r4.zzz;
    r10.xyz = r3.www ? r10.yzw : r11.xyz;
    r10.xyz = r3.zzz ? cb0[142].xyz : r10.xyz;
    r3.z = -1 + cb0[141].x;
    r3.z = v8.w * r3.z + 1;
    r10.xyz = r10.xyz * r3.zzz;
    r3.z = cmp(0 != cb0[95].z);
    r11.xyz = float3(-1,-1,-1) + cb0[139].xyz;
    r11.xyz = r8.yyy * r11.xyz + float3(1,1,1);
    r11.xyz = r3.zzz ? r11.xyz : cb0[139].xyz;
    r12.xyz = r11.xyz * r8.xzw;
    r3.z = cmp(0 != r9.x);
    r11.xyz = r3.zzz ? r11.xyz : cb0[144].xxx;
    r13.xyz = r11.xyz * r8.xzw;
    r3.z = cmp(r0.x < 1);
    r8.xyz = r8.xzw * r11.xyz + -r12.xyz;
    r8.xyz = r0.xxx * r8.xyz + r12.xyz;
    r8.xyz = r3.zzz ? r8.xyz : r13.xyz;
    r10.xyz = cb0[144].xxx * r10.xyz;
  } else {
    r3.z = -1 + r3.x;
    r3.w = r3.z * 0.100000001 + 0.0500000007;
    r4.y = cmp(0 != cb0[93].w);
    if (r4.y != 0) {
      r4.w = r3.z * 0.100000001 + 0.550000012;
      r9.z = 1 + -r3.w;
      r9.w = 1 + -r4.w;
      r11.xyz = t4.Sample(s2_s, r9.yz).xyz;
      r13.xyz = t4.Sample(s2_s, r9.yw).xyz;
      r11.xyz = -r13.xyz + r11.xyz;
      r11.xyz = cb0[145].zzz * r11.xyz + r13.xyz;
      r13.xz = float2(0,0);
      r13.yw = r9.zw;
      r14.xyz = t4.Sample(s2_s, r13.xy).xyz;
      r13.xyz = t4.Sample(s2_s, r13.zw).xyz;
      r14.xyz = r14.xyz + -r13.xyz;
      r13.xyz = cb0[145].zzz * r14.xyz + r13.xyz;
    } else {
      r14.x = 1 + -r3.w;
      r14.y = r9.y;
      r11.xyz = t4.Sample(s2_s, r14.yx).xyz;
      r14.z = 0;
      r13.xyz = t4.Sample(s2_s, r14.zx).xyz;
    }
    r4.w = cmp(r0.x < 1);
    if (r4.w != 0) {
      if (r4.y != 0) {
        r3.z = r3.z * 0.100000001 + 0.550000012;
        r14.yw = float2(1,1) + -r3.wz;
        r14.xz = float2(0,0);
        r9.yzw = t4.Sample(s2_s, r14.xy).xyz;
        r14.xyz = t4.Sample(s2_s, r14.zw).xyz;
        r9.yzw = -r14.xyz + r9.yzw;
        r9.yzw = cb0[145].zzz * r9.yzw + r14.xyz;
      } else {
        r14.y = 1 + -r3.w;
        r14.x = 0;
        r9.yzw = t4.Sample(s2_s, r14.xy).xyz;
      }
    } else {
      r9.yzw = float3(0,0,0);
    }
    r12.xyz = r13.xyz * r7.xyz;
    r3.z = cmp(0 != r9.x);
    r11.xyz = r11.xyz * r7.xyz;
    r13.xyz = cb0[144].xxx * r7.xyz;
    r11.xyz = r3.zzz ? r11.xyz : r13.xyz;
    r13.xyz = r9.yzw * r7.xyz;
    r9.xyz = -r7.xyz * r9.yzw + r11.xyz;
    r9.xyz = r0.xxx * r9.xyz + r13.xyz;
    r8.xyz = r4.www ? r9.xyz : r11.xyz;
    r3.z = cmp(r3.x == 1.000000);
    r3.w = r5.z ? cb0[124].w : cb0[130].w;
    r4.y = r5.z ? cb0[126].x : cb0[132].x;
    r9.xyzw = r5.zzzz ? cb0[125].xyzw : cb0[131].xyzw;
    r3.w = r5.y ? cb0[118].w : r3.w;
    r4.y = r5.y ? cb0[120].x : r4.y;
    r9.xyzw = r5.yyyy ? cb0[119].xyzw : r9.xyzw;
    r11.x = r5.x ? cb0[112].w : r3.w;
    r11.y = r5.x ? cb0[113].x : r9.x;
    r3.w = r5.x ? cb0[114].x : r4.y;
    r9.xyz = r5.xxx ? cb0[113].yzw : r9.yzw;
    r9.xyz = r3.zzz ? cb0[96].yzw : r9.xyz;
    r4.yw = r3.zz ? cb0[98].xy : r11.xy;
    r3.z = r3.z ? cb0[97].w : r3.w;
    r1.x = dot(v7.xyz, r1.xzw);
    r1.x = max(9.99999975e-05, r1.x);
    r1.x = log2(r1.x);
    r1.x = r4.y * r1.x;
    r1.x = exp2(r1.x);
    r1.z = 1 + -r4.z;
    r1.x = cmp(r1.z < r1.x);
    r4.yzw = r9.xyz * r4.www;
    r4.xyz = r4.yzw * r4.xxx;
    r2.xyz = r2.xyz * r6.xyz + float3(-1,-1,-1);
    r2.xyz = r3.zzz * r2.xyz + float3(1,1,1);
    r4.xyz = r4.xyz * r2.xyz;
    r4.w = 1;
    r4.xyzw = r1.xxxx ? r4.xyzw : 0;
    r1.xzw = cb0[144].xxx * r4.xyz;
    r10.xyz = r1.xzw * r4.www;
  }
  r1.xzw = cb0[103].xyz * r7.xyz;
  r1.xzw = cb0[102].zzz * r1.xzw;
  r2.xyz = cb0[110].xxx * cb0[110].yzw;
  r4.xyz = cb0[116].xyz * cb0[115].www;
  r6.xyz = cb0[122].xyz * cb0[121].www;
  r7.xyz = cb0[128].xyz * cb0[127].www;
  r3.x = cmp(r3.x == 1.000000);
  r9.xyz = cb0[104].xyz * cb0[102].www;
  r9.xyz = r9.xyz * r1.xzw;
  r2.xyz = r2.xyz * r1.xzw;
  r4.xyz = r4.xyz * r1.xzw;
  r6.xyz = r6.xyz * r1.xzw;
  r7.xyz = r7.xyz * r1.xzw;
  r1.xzw = r5.www ? r7.xyz : r1.xzw;
  r1.xzw = r5.zzz ? r6.xyz : r1.xzw;
  r1.xzw = r5.yyy ? r4.xyz : r1.xzw;
  r1.xzw = r5.xxx ? r2.xyz : r1.xzw;
  r1.xzw = r3.xxx ? r9.xyz : r1.xzw;
  r2.x = cmp(r0.x < 1);
  r3.xzw = r10.xyz * r0.xxx;
  r2.xyz = r2.xxx ? r3.xzw : r10.xyz;
  r3.xzw = r8.xyz + r2.xyz;
  r1.xzw = -r3.xzw + r1.xzw;
  r1.xzw = r2.www * r1.xzw + r3.xzw;
  r1.xzw = r3.yyy ? r1.xzw : r3.xzw;
  r0.x = saturate(dot(r0.yzw, v7.xyz));
  r0.x = 1 + -r0.x;
  r0.x = max(9.99999975e-05, r0.x);
  r0.x = log2(r0.x);
  r0.x = cb0[158].x * r0.x;
  r0.x = exp2(r0.x);
  r0.yzw = max(cb0[157].xyz, cb0[156].xyz);
  r0.xyz = r0.yzw * r0.xxx;
  r3.xyz = r0.xyz * cb0[158].yyy + r1.xzw;
  r0.w = 1 + -r2.w;
  r0.w = cb0[158].z * r0.w + r2.w;
  r0.xyz = r0.xyz * cb0[158].yyy + r12.xyz;
  r1.x = max(r3.y, r3.z);
  r4.w = max(r3.x, r1.x);
  r1.x = cmp(1 < r4.w);
  r4.xyz = r3.xyz / r4.www;
  r3.w = 1;
  r3.xyzw = r1.xxxx ? r4.xyzw : r3.xyzw;
  r0.xyz = cb0[98].zzz * r2.xyz + r0.xyz;
  r1.xzw = r0.xyz + -r3.xyz;
  r1.xzw = cb0[153].xxx * r1.xzw + r3.xyz;
  r0.xyz = r1.yyy ? r1.xzw : r0.xyz;
  r1.x = saturate(0.0500000007 * r3.w);
  o1.w = sqrt(r1.x);
  o0.xyz = v7.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  r1.x = cmp(0 != cb0[81].x);
  r1.y = 0.00392156886 * cb0[81].y;
  o2.z = r1.x ? r1.y : r0.z;
  o0.w = r5.x ? 0.333000 : 0;
  o1.xyz = r3.xyz;
  o2.xyw = r0.xyw;
  o3.x = 0.0156862754;
  o4.x = r0.w;
  o5.x = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Jul 20 09:59:58 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// COLOR                    0   xyzw        1     NONE   float   xy
// TEXCOORD                 0   xyzw        2     NONE   float
// TEXCOORD                 1   xyzw        3     NONE   float
// TEXCOORD                 2   xyzw        4     NONE   float
// TEXCOORD                 3   xyzw        5     NONE   float   xy w
// TEXCOORD                 4   xyzw        6     NONE   float
// TEXCOORD                 5   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyzw        8     NONE   float      w
// TEXCOORD                11   xyzw        9     NONE   float   xyzw
// TEXCOORD                12   xyzw       10     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   x           3   TARGET   float   x
// SV_Target                4   x           4   TARGET   float   x
// SV_Target                5   x           5   TARGET   float   x
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[159], immediateIndexed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_constantbuffer CB2[17], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v5.xyw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.w
dcl_input_ps linear v9.xyzw
dcl_input_ps linear v10.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.x
dcl_output o5.x
dcl_temps 15
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[133].x
if_nz r0.x
  lt r0.x, cb0[133].y, l(0.950000)
  if_nz r0.x
    div r0.xy, v5.yxyy, v5.wwww
    mul r0.xy, r0.xyxx, cb1[7].yxyy
    mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
    ge r0.zw, r0.xxxy, -r0.xxxy
    frc r0.xy, |r0.xyxx|
    movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
    mul r0.xy, r0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
    ftou r0.xy, r0.xyxx
    dp4 r1.x, cb0[17].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.y, cb0[18].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.z, cb0[19].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.w, cb0[20].xyzw, icb[r0.y + 0].xyzw
    dp4 r0.x, r1.xyzw, icb[r0.x + 0].xyzw
    mad r0.x, cb0[133].y, l(17.000000), -r0.x
    add r0.x, r0.x, l(-0.010000)
    lt r0.x, r0.x, l(0.000000)
    discard_nz r0.x
  endif
endif
dp3 r0.x, v9.xyzx, v9.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, v9.xxyz
lt r1.xy, l(0.000000, 0.500000, 0.000000, 0.000000), cb0[151].wwww
ne r1.z, l(0.000000, 0.000000, 0.000000, 0.000000), v7.w
movc r2.xyz, r1.zzzz, cb0[152].xyzx, cb0[151].xyzx
movc r1.xzw, r1.xxxx, r2.xxyz, cb0[147].xxyz
mad r1.xzw, v9.xxyz, r0.xxxx, r1.xxzw
dp3 r0.x, r1.xzwx, r1.xzwx
rsq r0.x, r0.x
mul r1.xzw, r0.xxxx, r1.xxzw
add r0.x, cb0[133].z, l(-1.000000)
sample_b_indexable(texture2d)(float,float,float,float) r2.xyzw, v10.xyxx, t0.xyzw, s0, r0.x
eq r3.xyz, cb0[85].xxxx, l(3.000000, 1.000000, 2.000000, 0.000000)
mul r3.w, r2.w, cb0[98].w
add r4.xyz, -r2.xyzx, cb0[99].xyzx
mad r4.xyz, r3.wwww, r4.xyzx, r2.xyzx
movc r2.xyz, r3.xxxx, r4.xyzx, r2.xyzx
add r3.x, r2.w, -cb0[85].y
lt r3.x, r3.x, l(0.000000)
and r3.x, r3.y, r3.x
discard_nz r3.x
sample_b_indexable(texture2d)(float,float,float,float) r4.xyzw, v10.xyxx, t1.xyzw, s1, r0.x
ge r0.x, l(0.001000), cb0[92].x
and r0.x, r0.x, l(0x3f800000)
mad r0.x, r0.x, -r4.y, r4.y
ne r3.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[109].x
ge r5.xyzw, r4.wwww, l(0.800000, 0.400000, 0.200000, 0.600000)
and r3.x, r3.x, r5.x
movc r3.x, r3.x, l(2.000000), l(1.000000)
ne r3.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[114].w
and r3.y, r5.y, r3.y
lt r6.xyz, r4.wwww, l(0.600000, 0.400000, 0.800000, 0.000000)
and r3.y, r3.y, r6.x
movc r3.x, r3.y, l(3.000000), r3.x
ne r3.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[120].w
and r3.y, r5.z, r3.y
and r3.y, r6.y, r3.y
movc r3.x, r3.y, l(4.000000), r3.x
ne r3.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[126].w
and r3.y, r5.w, r3.y
and r3.y, r6.z, r3.y
movc r3.x, r3.y, l(5.000000), r3.x
eq r5.xyzw, r3.xxxx, l(2.000000, 3.000000, 4.000000, 5.000000)
movc r6.xyz, r5.xxxx, cb0[109].yzwy, cb0[82].xyzx
movc r6.xyz, r5.yyyy, cb0[115].xyzx, r6.xyzx
movc r6.xyz, r5.zzzz, cb0[121].xyzx, r6.xyzx
movc r6.xyz, r5.wwww, cb0[127].xyzx, r6.xyzx
mul r7.xyz, r2.xyzx, r6.xyzx
lt r3.y, l(0.010000), r2.w
and r3.y, r3.y, r3.z
and r2.w, r2.w, r3.y
ne r3.z, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[92].y
mul r3.w, r0.x, v1.x
movc r0.x, r3.z, r3.w, r0.x
lt r3.z, r0.x, l(0.050000)
lt r3.w, l(0.950000), r0.x
add r0.x, r0.x, v9.w
mul r0.x, r0.x, l(0.500000)
movc r0.x, r3.w, l(1.000000), r0.x
movc r0.x, r3.z, l(0), r0.x
lt r3.z, r0.x, cb0[92].z
add r0.x, -r0.x, cb0[92].z
div r8.y, r0.x, cb0[92].z
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[95].y
add r3.w, v1.y, v1.y
max r3.w, r3.w, l(0.010000)
mul r3.w, r3.w, cb0[95].x
movc r0.x, r0.x, r3.w, cb0[95].x
div r0.x, r8.y, r0.x
min r0.x, r0.x, l(1.000000)
add r8.z, -r0.x, l(1.000000)
movc r8.yz, r3.zzzz, r8.yyzy, l(0,0,1.000000,0)
and r8.x, r3.z, l(0x3f800000)
lt r0.x, l(0.000010), v8.w
movc r9.xy, r0.xxxx, l(1.000000,0,0,0), r8.xzxx
lt r0.x, l(0.500000), cb0[147].w
add r3.z, cb0[2].w, cb0[2].w
min r3.z, r3.z, l(1.000000)
movc r0.x, r0.x, r3.z, l(1.000000)
lt r3.z, l(0.900000), r4.x
if_nz r3.z
  mul r3.zw, v7.yyyy, cb2[15].xxxy
  mad r3.zw, cb2[14].xxxy, v7.xxxx, r3.zzzw
  mad r10.yz, cb2[16].xxyx, v7.zzzz, r3.zzwz
  mul r10.x, r10.y, cb0[136].z
  mad r3.zw, r10.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_indexable(texture2d)(float,float,float,float) r3.z, r3.zwzz, t2.yzxw, s3
  mul_sat r3.z, r3.z, cb0[136].y
  add r8.xzw, cb0[137].xxyz, -cb0[138].xxyz
  mad r8.xzw, r3.zzzz, r8.xxzw, cb0[138].xxyz
  mul r8.xzw, r7.xxyz, r8.xxzw
  dp3 r3.z, v7.xyzx, r1.xzwx
  max r3.z, r3.z, l(0.001000)
  log r3.z, r3.z
  mul r3.z, r3.z, cb0[139].w
  exp r3.z, r3.z
  mul_sat r10.x, r3.z, cb0[140].w
  lt r3.z, cb0[141].z, r10.x
  ne r3.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[141].y
  mov r10.y, l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r10.yzw, r10.xyxx, t3.wxyz, s4
  mul r10.yzw, r4.zzzz, r10.yyzw
  mul r11.xyz, r10.xxxx, cb0[140].xyzx
  mul r11.xyz, r4.zzzz, r11.xyzx
  movc r10.xyz, r3.wwww, r10.yzwy, r11.xyzx
  movc r10.xyz, r3.zzzz, cb0[142].xyzx, r10.xyzx
  add r3.z, cb0[141].x, l(-1.000000)
  mad r3.z, v8.w, r3.z, l(1.000000)
  mul r10.xyz, r3.zzzz, r10.xyzx
  ne r3.z, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[95].z
  add r11.xyz, cb0[139].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r11.xyz, r8.yyyy, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r11.xyz, r3.zzzz, r11.xyzx, cb0[139].xyzx
  mul r12.xyz, r8.xzwx, r11.xyzx
  ne r3.z, l(0.000000, 0.000000, 0.000000, 0.000000), r9.x
  movc r11.xyz, r3.zzzz, r11.xyzx, cb0[144].xxxx
  mul r13.xyz, r8.xzwx, r11.xyzx
  lt r3.z, r0.x, l(1.000000)
  mad r8.xyz, r8.xzwx, r11.xyzx, -r12.xyzx
  mad r8.xyz, r0.xxxx, r8.xyzx, r12.xyzx
  movc r8.xyz, r3.zzzz, r8.xyzx, r13.xyzx
  mul r10.xyz, r10.xyzx, cb0[144].xxxx
else
  add r3.z, r3.x, l(-1.000000)
  mad r3.w, r3.z, l(0.100000), l(0.050000)
  ne r4.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[93].w
  if_nz r4.y
    mad r4.w, r3.z, l(0.100000), l(0.550000)
    add r9.z, -r3.w, l(1.000000)
    add r9.w, -r4.w, l(1.000000)
    sample_indexable(texture2d)(float,float,float,float) r11.xyz, r9.yzyy, t4.xyzw, s2
    sample_indexable(texture2d)(float,float,float,float) r13.xyz, r9.ywyy, t4.xyzw, s2
    add r11.xyz, r11.xyzx, -r13.xyzx
    mad r11.xyz, cb0[145].zzzz, r11.xyzx, r13.xyzx
    mov r13.xz, l(0,0,0,0)
    mov r13.yw, r9.zzzw
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r13.xyxx, t4.xyzw, s2
    sample_indexable(texture2d)(float,float,float,float) r13.xyz, r13.zwzz, t4.xyzw, s2
    add r14.xyz, -r13.xyzx, r14.xyzx
    mad r13.xyz, cb0[145].zzzz, r14.xyzx, r13.xyzx
  else
    add r14.x, -r3.w, l(1.000000)
    mov r14.y, r9.y
    sample_indexable(texture2d)(float,float,float,float) r11.xyz, r14.yxyy, t4.xyzw, s2
    mov r14.z, l(0)
    sample_indexable(texture2d)(float,float,float,float) r13.xyz, r14.zxzz, t4.xyzw, s2
  endif
  lt r4.w, r0.x, l(1.000000)
  if_nz r4.w
    if_nz r4.y
      mad r3.z, r3.z, l(0.100000), l(0.550000)
      add r14.yw, -r3.wwwz, l(0.000000, 1.000000, 0.000000, 1.000000)
      mov r14.xz, l(0,0,0,0)
      sample_indexable(texture2d)(float,float,float,float) r9.yzw, r14.xyxx, t4.wxyz, s2
      sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.zwzz, t4.xyzw, s2
      add r9.yzw, r9.yyzw, -r14.xxyz
      mad r9.yzw, cb0[145].zzzz, r9.yyzw, r14.xxyz
    else
      add r14.y, -r3.w, l(1.000000)
      mov r14.x, l(0)
      sample_indexable(texture2d)(float,float,float,float) r9.yzw, r14.xyxx, t4.wxyz, s2
    endif
  else
    mov r9.yzw, l(0,0,0,0)
  endif
  mul r12.xyz, r7.xyzx, r13.xyzx
  ne r3.z, l(0.000000, 0.000000, 0.000000, 0.000000), r9.x
  mul r11.xyz, r7.xyzx, r11.xyzx
  mul r13.xyz, r7.xyzx, cb0[144].xxxx
  movc r11.xyz, r3.zzzz, r11.xyzx, r13.xyzx
  mul r13.xyz, r7.xyzx, r9.yzwy
  mad r9.xyz, -r7.xyzx, r9.yzwy, r11.xyzx
  mad r9.xyz, r0.xxxx, r9.xyzx, r13.xyzx
  movc r8.xyz, r4.wwww, r9.xyzx, r11.xyzx
  eq r3.z, r3.x, l(1.000000)
  movc r3.w, r5.z, cb0[124].w, cb0[130].w
  movc r4.y, r5.z, cb0[126].x, cb0[132].x
  movc r9.xyzw, r5.zzzz, cb0[125].xyzw, cb0[131].xyzw
  movc r3.w, r5.y, cb0[118].w, r3.w
  movc r4.y, r5.y, cb0[120].x, r4.y
  movc r9.xyzw, r5.yyyy, cb0[119].xyzw, r9.xyzw
  movc r11.x, r5.x, cb0[112].w, r3.w
  movc r11.y, r5.x, cb0[113].x, r9.x
  movc r3.w, r5.x, cb0[114].x, r4.y
  movc r9.xyz, r5.xxxx, cb0[113].yzwy, r9.yzwy
  movc r9.xyz, r3.zzzz, cb0[96].yzwy, r9.xyzx
  movc r4.yw, r3.zzzz, cb0[98].xxxy, r11.xxxy
  movc r3.z, r3.z, cb0[97].w, r3.w
  dp3 r1.x, v7.xyzx, r1.xzwx
  max r1.x, r1.x, l(0.000100)
  log r1.x, r1.x
  mul r1.x, r1.x, r4.y
  exp r1.x, r1.x
  add r1.z, -r4.z, l(1.000000)
  lt r1.x, r1.z, r1.x
  mul r4.yzw, r4.wwww, r9.xxyz
  mul r4.xyz, r4.xxxx, r4.yzwy
  mad r2.xyz, r2.xyzx, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r2.xyz, r3.zzzz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r4.xyz, r2.xyzx, r4.xyzx
  mov r4.w, l(1.000000)
  and r4.xyzw, r1.xxxx, r4.xyzw
  mul r1.xzw, r4.xxyz, cb0[144].xxxx
  mul r10.xyz, r4.wwww, r1.xzwx
endif
mul r1.xzw, r7.xxyz, cb0[103].xxyz
mul r1.xzw, r1.xxzw, cb0[102].zzzz
mul r2.xyz, cb0[110].yzwy, cb0[110].xxxx
mul r4.xyz, cb0[115].wwww, cb0[116].xyzx
mul r6.xyz, cb0[121].wwww, cb0[122].xyzx
mul r7.xyz, cb0[127].wwww, cb0[128].xyzx
eq r3.x, r3.x, l(1.000000)
mul r9.xyz, cb0[102].wwww, cb0[104].xyzx
mul r9.xyz, r1.xzwx, r9.xyzx
mul r2.xyz, r1.xzwx, r2.xyzx
mul r4.xyz, r1.xzwx, r4.xyzx
mul r6.xyz, r1.xzwx, r6.xyzx
mul r7.xyz, r1.xzwx, r7.xyzx
movc r1.xzw, r5.wwww, r7.xxyz, r1.xxzw
movc r1.xzw, r5.zzzz, r6.xxyz, r1.xxzw
movc r1.xzw, r5.yyyy, r4.xxyz, r1.xxzw
movc r1.xzw, r5.xxxx, r2.xxyz, r1.xxzw
movc r1.xzw, r3.xxxx, r9.xxyz, r1.xxzw
lt r2.x, r0.x, l(1.000000)
mul r3.xzw, r0.xxxx, r10.xxyz
movc r2.xyz, r2.xxxx, r3.xzwx, r10.xyzx
add r3.xzw, r2.xxyz, r8.xxyz
add r1.xzw, r1.xxzw, -r3.xxzw
mad r1.xzw, r2.wwww, r1.xxzw, r3.xxzw
movc r1.xzw, r3.yyyy, r1.xxzw, r3.xxzw
dp3_sat r0.x, r0.yzwy, v7.xyzx
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000100)
log r0.x, r0.x
mul r0.x, r0.x, cb0[158].x
exp r0.x, r0.x
max r0.yzw, cb0[156].xxyz, cb0[157].xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
mad r3.xyz, r0.xyzx, cb0[158].yyyy, r1.xzwx
add r0.w, -r2.w, l(1.000000)
mad r0.w, cb0[158].z, r0.w, r2.w
mad r0.xyz, r0.xyzx, cb0[158].yyyy, r12.xyzx
max r1.x, r3.z, r3.y
max r4.w, r1.x, r3.x
lt r1.x, l(1.000000), r4.w
div r4.xyz, r3.xyzx, r4.wwww
mov r3.w, l(1.000000)
movc r3.xyzw, r1.xxxx, r4.xyzw, r3.xyzw
mad r0.xyz, cb0[98].zzzz, r2.xyzx, r0.xyzx
add r1.xzw, -r3.xxyz, r0.xxyz
mad r1.xzw, cb0[153].xxxx, r1.xxzw, r3.xxyz
movc r0.xyz, r1.yyyy, r1.xzwx, r0.xyzx
mul_sat r1.x, r3.w, l(0.050000)
sqrt o1.w, r1.x
mad o0.xyz, v7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[81].x
mul r1.y, cb0[81].y, l(0.00392156886)
movc o2.z, r1.x, r1.y, r0.z
and o0.w, r5.x, l(0x3eaa7efa)
mov o1.xyz, r3.xyzx
mov o2.xyw, r0.xyxw
mov o3.x, l(0.0156862754)
mov o4.x, r0.w
mov o5.x, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
