// ---- Created with 3Dmigoto v1.3.16 on Fri Jul 19 22:49:35 2024
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[159];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float4 v5 : TEXCOORD3,
  float4 v6 : TEXCOORD4,
  float4 v7 : TEXCOORD5,
  float4 v8 : TEXCOORD6,
  float4 v9 : TEXCOORD9,
  float4 v10 : TEXCOORD11,
  float4 v11 : TEXCOORD12,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float o3 : SV_Target3,
  out float o4 : SV_Target4,
  out float o5 : SV_Target5)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cmp(0 != cb0[133].x);
  r0.x = dot(v10.xyz, v10.xyz);
  r0.x = rsqrt(r0.x);
  r0.yzw = v10.xyz * r0.xxx;
  r1.xy = cmp(float2(0,0.5) < cb0[151].ww);
  r1.z = cmp(0 != v7.w);
  r2.xyz = r1.zzz ? cb0[152].xyz : cb0[151].xyz;
  r1.xzw = r1.xxx ? r2.xyz : cb0[147].xyz;
  r1.xzw = v10.xyz * r0.xxx + r1.xzw;
  r0.x = dot(r1.xzw, r1.xzw);
  r0.x = rsqrt(r0.x);
  r1.xzw = r1.xzw * r0.xxx;
  r0.x = -1 + cb0[133].z;
  r2.xyzw = t0.SampleBias(s0_s, v11.xy, r0.x).xyzw;
  r3.xyz = cmp(cb0[85].xxx == float3(3,1,2));
  r3.w = cb0[98].w * r2.w;
  r4.xyz = cb0[99].xyz + -r2.xyz;
  r4.xyz = r3.www * r4.xyz + r2.xyz;
  r2.xyz = r3.xxx ? r4.xyz : r2.xyz;
  r3.x = -cb0[85].y + r2.w;
  r3.x = cmp(r3.x < 0);
  r3.x = r3.y ? r3.x : 0;
  if (r3.x != 0) discard;
  r4.xyzw = t1.SampleBias(s1_s, v11.xy, r0.x).xyzw;
  r0.x = cmp(0.00100000005 >= cb0[92].x);
  r0.x = r0.x ? 1.000000 : 0;
  r3.xy = float2(1,1) + -r4.yz;
  r0.x = r0.x * r3.x + r4.y;
  r3.x = cmp(0 != cb0[109].x);
  r5.xyzw = cmp(r4.wwww >= float4(0.800000012,0.400000006,0.200000003,0.600000024));
  r3.x = r3.x ? r5.x : 0;
  r3.x = r3.x ? 2 : 1;
  r3.w = cmp(0 != cb0[114].w);
  r3.w = r5.y ? r3.w : 0;
  r4.yzw = cmp(r4.www < float3(0.600000024,0.400000006,0.800000012));
  r3.w = r3.w ? r4.y : 0;
  r3.x = r3.w ? 3 : r3.x;
  r3.w = cmp(0 != cb0[120].w);
  r3.w = r5.z ? r3.w : 0;
  r3.w = r4.z ? r3.w : 0;
  r3.x = r3.w ? 4 : r3.x;
  r3.w = cmp(0 != cb0[126].w);
  r3.w = r5.w ? r3.w : 0;
  r3.w = r4.w ? r3.w : 0;
  r3.x = r3.w ? 5 : r3.x;
  r5.xyzw = cmp(r3.xxxx == float4(2,3,4,5));
  r4.yzw = r5.xxx ? cb0[109].yzw : cb0[82].xyz;
  r4.yzw = r5.yyy ? cb0[115].xyz : r4.yzw;
  r4.yzw = r5.zzz ? cb0[121].xyz : r4.yzw;
  r4.yzw = r5.www ? cb0[127].xyz : r4.yzw;
  r6.xyz = r4.yzw * r2.xyz;
  r3.w = cmp(0.00999999978 < r2.w);
  r3.z = r3.w ? r3.z : 0;
  r2.w = r3.z ? r2.w : 0;
  r3.w = t2.Sample(s2_s, v9.xy).w;
  r6.w = max(9.99999997e-07, cb0[102].y);
  r7.x = v9.z + -r6.w;
  r7.x = max(9.99999975e-05, r7.x);
  r7.x = min(0.998899996, r7.x);
  r6.w = v9.z + r6.w;
  r6.w = min(0.999899983, r6.w);
  r6.w = r6.w + -r7.x;
  r3.w = -r7.x + r3.w;
  r6.w = 1 / r6.w;
  r3.w = saturate(r6.w * r3.w);
  r6.w = r3.w * -2 + 3;
  r3.w = r3.w * r3.w;
  r7.x = r6.w * r3.w;
  r7.y = cmp(0 != cb0[92].y);
  r7.z = v1.x * r0.x;
  r0.x = r7.y ? r7.z : r0.x;
  r7.y = cmp(r0.x < 0.0500000007);
  r7.z = cmp(0.949999988 < r0.x);
  r0.x = v10.w + r0.x;
  r0.x = 0.5 * r0.x;
  r0.x = r7.z ? 1 : r0.x;
  r0.x = r7.y ? 0 : r0.x;
  r7.y = cmp(r0.x < cb0[92].z);
  r7.z = cmp(0.5 < r4.x);
  r7.x = min(r7.y, r7.x);
  r7.x = r7.z ? r7.x : r7.y;
  r7.x = 1 + -r7.x;
  r7.y = cmp(9.99999975e-06 < v8.w);
  r7.z = cmp(0.5 < cb0[147].w);
  r7.w = cb0[2].w + cb0[2].w;
  r7.w = min(1, r7.w);
  r7.z = r7.z ? r7.w : 1;
  r3.x = cmp(r3.x == 1.000000);
  if (r3.x != 0) {
    r7.w = cmp(0 != cb0[93].w);
    r8.xyz = -cb0[94].xyz + cb0[93].xyz;
    r8.xyz = cb0[145].zzz * r8.xyz + cb0[94].xyz;
    r8.xyz = r7.www ? r8.xyz : cb0[93].xyz;
  } else {
    if (r5.x != 0) {
      r7.w = cmp(0 != cb0[93].w);
      r9.xyz = -cb0[112].xyz + cb0[111].xyz;
      r9.xyz = cb0[145].zzz * r9.xyz + cb0[112].xyz;
      r8.xyz = r7.www ? r9.xyz : cb0[111].xyz;
    } else {
      r7.w = cmp(0 != cb0[93].w);
      r9.xyz = -cb0[118].xyz + cb0[117].xyz;
      r9.xyz = cb0[145].zzz * r9.xyz + cb0[118].xyz;
      r9.xyz = r7.www ? r9.xyz : cb0[117].xyz;
      r10.xyz = -cb0[124].xyz + cb0[123].xyz;
      r10.xyz = cb0[145].zzz * r10.xyz + cb0[124].xyz;
      r10.xyz = r7.www ? r10.xyz : cb0[123].xyz;
      r11.xyz = -cb0[130].xyz + cb0[129].xyz;
      r11.xyz = cb0[145].zzz * r11.xyz + cb0[130].xyz;
      r11.xyz = r7.www ? r11.xyz : cb0[129].xyz;
      r10.xyz = r5.zzz ? r10.xyz : r11.xyz;
      r8.xyz = r5.yyy ? r9.xyz : r10.xyz;
    }
  }
  r7.w = cmp(r7.z < 1);
  r9.xyz = r7.www ? r8.xyz : 0;
  r8.w = cmp(0 != cb0[95].z);
  r9.w = cmp(0 != v8.w);
  r10.x = ~(int)r9.w;
  r8.w = r8.w ? r10.x : 0;
  r10.xyz = float3(-1,-1,-1) + r8.xyz;
  r10.xyz = r0.xxx * r10.xyz + float3(1,1,1);
  r10.xyz = r8.www ? r10.xyz : r8.xyz;
  r0.x = -r6.w * r3.w + 1;
  r11.xyz = float3(-1,-1,-1) + r10.xyz;
  r11.xyz = r0.xxx * r11.xyz + float3(1,1,1);
  r10.xyz = r9.www ? r10.xyz : r11.xyz;
  r0.x = cmp(0 != r7.x);
  r0.x = (int)r0.x | (int)r7.y;
  r10.xyz = r10.xyz * r6.xyz;
  r11.xyz = cb0[144].xxx * r6.xyz;
  r10.xyz = r0.xxx ? r10.xyz : r11.xyz;
  r11.xyz = r9.xyz * r6.xyz;
  r9.xyz = -r6.xyz * r9.xyz + r10.xyz;
  r9.xyz = r7.zzz * r9.xyz + r11.xyz;
  r9.xyz = r7.www ? r9.xyz : r10.xyz;
  r0.x = r5.z ? cb0[124].w : cb0[130].w;
  r3.w = r5.z ? cb0[126].x : cb0[132].x;
  r10.xyzw = r5.zzzz ? cb0[125].xyzw : cb0[131].xyzw;
  r0.x = r5.y ? cb0[118].w : r0.x;
  r3.w = r5.y ? cb0[120].x : r3.w;
  r10.xyzw = r5.yyyy ? cb0[119].xyzw : r10.xyzw;
  r7.x = r5.x ? cb0[112].w : r0.x;
  r7.y = r5.x ? cb0[113].x : r10.x;
  r0.x = r5.x ? cb0[114].x : r3.w;
  r10.xyz = r5.xxx ? cb0[113].yzw : r10.yzw;
  r10.xyz = r3.xxx ? cb0[96].yzw : r10.xyz;
  r7.xy = r3.xx ? cb0[98].xy : r7.xy;
  r0.x = r3.x ? cb0[97].w : r0.x;
  r1.x = dot(v7.xyz, r1.xzw);
  r1.x = max(9.99999975e-05, r1.x);
  r1.x = log2(r1.x);
  r1.x = r7.x * r1.x;
  r1.x = exp2(r1.x);
  r1.x = cmp(r3.y < r1.x);
  r10.xyz = r10.xyz * r7.yyy;
  r10.xyz = r10.xyz * r4.xxx;
  r2.xyz = r2.xyz * r4.yzw + float3(-1,-1,-1);
  r2.xyz = r0.xxx * r2.xyz + float3(1,1,1);
  r4.xyz = r10.xyz * r2.xyz;
  r4.w = 1;
  r4.xyzw = r1.xxxx ? r4.xyzw : 0;
  r1.xzw = cb0[144].xxx * r4.xyz;
  r1.xzw = r1.xzw * r4.www;
  r2.xyz = cb0[103].xyz * r6.xyz;
  r2.xyz = cb0[102].zzz * r2.xyz;
  r4.xyz = cb0[110].xxx * cb0[110].yzw;
  r10.xyz = cb0[116].xyz * cb0[115].www;
  r11.xyz = cb0[122].xyz * cb0[121].www;
  r12.xyz = cb0[128].xyz * cb0[127].www;
  r13.xyz = cb0[104].xyz * cb0[102].www;
  r13.xyz = r13.xyz * r2.xyz;
  r4.xyz = r4.xyz * r2.xyz;
  r10.xyz = r10.xyz * r2.xyz;
  r11.xyz = r11.xyz * r2.xyz;
  r12.xyz = r12.xyz * r2.xyz;
  r2.xyz = r5.www ? r12.xyz : r2.xyz;
  r2.xyz = r5.zzz ? r11.xyz : r2.xyz;
  r2.xyz = r5.yyy ? r10.xyz : r2.xyz;
  r2.xyz = r5.xxx ? r4.xyz : r2.xyz;
  r2.xyz = r3.xxx ? r13.xyz : r2.xyz;
  r3.xyw = r1.xzw * r7.zzz;
  r1.xzw = r7.www ? r3.xyw : r1.xzw;
  r3.xyw = r9.xyz + r1.xzw;
  r2.xyz = -r3.xyw + r2.xyz;
  r2.xyz = r2.www * r2.xyz + r3.xyw;
  r2.xyz = r3.zzz ? r2.xyz : r3.xyw;
  r0.x = saturate(dot(r0.yzw, v7.xyz));
  r0.x = 1 + -r0.x;
  r0.x = max(9.99999975e-05, r0.x);
  r0.x = log2(r0.x);
  r0.x = cb0[158].x * r0.x;
  r0.x = exp2(r0.x);
  r0.yzw = max(cb0[157].xyz, cb0[156].xyz);
  r0.xyz = r0.yzw * r0.xxx;
  r3.xyz = cb0[158].yyy * r0.xyz;
  r0.xyz = r0.xyz * cb0[158].yyy + r2.xyz;
  r2.x = 1 + -r2.w;
  r2.x = cb0[158].z * r2.x + r2.w;
  r2.yzw = r6.xyz * r8.xyz + r3.xyz;
  r3.x = max(r0.y, r0.z);
  r3.w = max(r3.x, r0.x);
  r4.x = cmp(1 < r3.w);
  r3.xyz = r0.xyz / r3.www;
  r0.w = 1;
  r0.xyzw = r4.xxxx ? r3.xyzw : r0.xyzw;
  r1.xzw = cb0[98].zzz * r1.xzw + r2.yzw;
  r2.yzw = r1.xzw + -r0.xyz;
  r2.yzw = cb0[153].xxx * r2.yzw + r0.xyz;
  r1.xyz = r1.yyy ? r2.yzw : r1.xzw;
  r0.w = saturate(0.0500000007 * r0.w);
  o1.w = sqrt(r0.w);
  r0.w = cmp(0 != cb0[81].x);
  r1.w = 0.00392156886 * cb0[81].y;
  o2.z = r0.w ? r1.w : r1.z;
  o0.xyz = v7.xyz * float3(0.5,0.5,0.5) + float3(0.5,0.5,0.5);
  o0.w = 0.333000004;
  o1.xyz = r0.xyz;
  o2.xy = r1.xy;
  o2.w = r2.x;
  o3.x = 0.0156862754;
  o4.x = r2.x;
  o5.x = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Jul 19 22:49:35 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// COLOR                    0   xyzw        1     NONE   float   x
// TEXCOORD                 0   xyzw        2     NONE   float
// TEXCOORD                 1   xyzw        3     NONE   float
// TEXCOORD                 2   xyzw        4     NONE   float
// TEXCOORD                 3   xyzw        5     NONE   float   xy w
// TEXCOORD                 4   xyzw        6     NONE   float
// TEXCOORD                 5   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyzw        8     NONE   float      w
// TEXCOORD                 9   xyz         9     NONE   float   xyz
// TEXCOORD                11   xyzw       10     NONE   float   xyzw
// TEXCOORD                12   xyzw       11     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   x           3   TARGET   float   x
// SV_Target                4   x           4   TARGET   float   x
// SV_Target                5   x           5   TARGET   float   x
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[159], immediateIndexed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.x
dcl_input_ps linear v5.xyw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.w
dcl_input_ps linear v9.xyz
dcl_input_ps linear v10.xyzw
dcl_input_ps linear v11.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_output o4.x
dcl_output o5.x
dcl_temps 14
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[133].x
if_nz r0.x
  lt r0.x, cb0[133].y, l(0.950000)
  if_nz r0.x
    div r0.xy, v5.yxyy, v5.wwww
    mul r0.xy, r0.xyxx, cb1[7].yxyy
    mul r0.xy, r0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
    ge r0.zw, r0.xxxy, -r0.xxxy
    frc r0.xy, |r0.xyxx|
    movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
    mul r0.xy, r0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
    ftou r0.xy, r0.xyxx
    dp4 r1.x, cb0[17].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.y, cb0[18].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.z, cb0[19].xyzw, icb[r0.y + 0].xyzw
    dp4 r1.w, cb0[20].xyzw, icb[r0.y + 0].xyzw
    dp4 r0.x, r1.xyzw, icb[r0.x + 0].xyzw
    mad r0.x, cb0[133].y, l(17.000000), -r0.x
    add r0.x, r0.x, l(-0.010000)
    lt r0.x, r0.x, l(0.000000)
    discard_nz r0.x
  endif
endif
dp3 r0.x, v10.xyzx, v10.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, v10.xxyz
lt r1.xy, l(0.000000, 0.500000, 0.000000, 0.000000), cb0[151].wwww
ne r1.z, l(0.000000, 0.000000, 0.000000, 0.000000), v7.w
movc r2.xyz, r1.zzzz, cb0[152].xyzx, cb0[151].xyzx
movc r1.xzw, r1.xxxx, r2.xxyz, cb0[147].xxyz
mad r1.xzw, v10.xxyz, r0.xxxx, r1.xxzw
dp3 r0.x, r1.xzwx, r1.xzwx
rsq r0.x, r0.x
mul r1.xzw, r0.xxxx, r1.xxzw
add r0.x, cb0[133].z, l(-1.000000)
sample_b_indexable(texture2d)(float,float,float,float) r2.xyzw, v11.xyxx, t0.xyzw, s0, r0.x
eq r3.xyz, cb0[85].xxxx, l(3.000000, 1.000000, 2.000000, 0.000000)
mul r3.w, r2.w, cb0[98].w
add r4.xyz, -r2.xyzx, cb0[99].xyzx
mad r4.xyz, r3.wwww, r4.xyzx, r2.xyzx
movc r2.xyz, r3.xxxx, r4.xyzx, r2.xyzx
add r3.x, r2.w, -cb0[85].y
lt r3.x, r3.x, l(0.000000)
and r3.x, r3.y, r3.x
discard_nz r3.x
sample_b_indexable(texture2d)(float,float,float,float) r4.xyzw, v11.xyxx, t1.xyzw, s1, r0.x
ge r0.x, l(0.001000), cb0[92].x
and r0.x, r0.x, l(0x3f800000)
add r3.xy, -r4.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, r0.x, r3.x, r4.y
ne r3.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[109].x
ge r5.xyzw, r4.wwww, l(0.800000, 0.400000, 0.200000, 0.600000)
and r3.x, r3.x, r5.x
movc r3.x, r3.x, l(2.000000), l(1.000000)
ne r3.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[114].w
and r3.w, r5.y, r3.w
lt r4.yzw, r4.wwww, l(0.000000, 0.600000, 0.400000, 0.800000)
and r3.w, r3.w, r4.y
movc r3.x, r3.w, l(3.000000), r3.x
ne r3.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[120].w
and r3.w, r5.z, r3.w
and r3.w, r4.z, r3.w
movc r3.x, r3.w, l(4.000000), r3.x
ne r3.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[126].w
and r3.w, r5.w, r3.w
and r3.w, r4.w, r3.w
movc r3.x, r3.w, l(5.000000), r3.x
eq r5.xyzw, r3.xxxx, l(2.000000, 3.000000, 4.000000, 5.000000)
movc r4.yzw, r5.xxxx, cb0[109].yyzw, cb0[82].xxyz
movc r4.yzw, r5.yyyy, cb0[115].xxyz, r4.yyzw
movc r4.yzw, r5.zzzz, cb0[121].xxyz, r4.yyzw
movc r4.yzw, r5.wwww, cb0[127].xxyz, r4.yyzw
mul r6.xyz, r2.xyzx, r4.yzwy
lt r3.w, l(0.010000), r2.w
and r3.z, r3.w, r3.z
and r2.w, r2.w, r3.z
sample_indexable(texture2d)(float,float,float,float) r3.w, v9.xyxx, t2.xyzw, s2
max r6.w, cb0[102].y, l(0.000001)
add r7.x, -r6.w, v9.z
max r7.x, r7.x, l(0.000100)
min r7.x, r7.x, l(0.998900)
add r6.w, r6.w, v9.z
min r6.w, r6.w, l(0.999900)
add r6.w, -r7.x, r6.w
add r3.w, r3.w, -r7.x
div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
mul_sat r3.w, r3.w, r6.w
mad r6.w, r3.w, l(-2.000000), l(3.000000)
mul r3.w, r3.w, r3.w
mul r7.x, r3.w, r6.w
ne r7.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[92].y
mul r7.z, r0.x, v1.x
movc r0.x, r7.y, r7.z, r0.x
lt r7.y, r0.x, l(0.050000)
lt r7.z, l(0.950000), r0.x
add r0.x, r0.x, v10.w
mul r0.x, r0.x, l(0.500000)
movc r0.x, r7.z, l(1.000000), r0.x
movc r0.x, r7.y, l(0), r0.x
lt r7.y, r0.x, cb0[92].z
if_nz r7.y
  ne r7.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[95].z
  movc r8.x, r5.x, cb0[114].y, cb0[95].w
  movc r8.y, r5.x, cb0[114].z, cb0[96].x
  movc r7.zw, r5.yyyy, cb0[120].yyyz, r8.xxxy
  movc r7.zw, r5.zzzz, cb0[126].yyyz, r7.zzzw
  movc r7.zw, r5.wwww, cb0[132].yyyz, r7.zzzw
  add r0.x, -r0.x, cb0[92].z
  div r0.x, r0.x, r7.z
  ge r7.z, r0.x, l(1.000000)
  add r0.x, r0.x, l(0.010000)
  log r0.x, r0.x
  mul r0.x, r0.x, r7.w
  exp r0.x, r0.x
  min r0.x, r0.x, l(1.000000)
  movc r0.x, r7.z, l(1.000000), r0.x
  movc r0.x, r7.y, r0.x, l(1.000000)
  mov r7.y, l(0)
else
  mov r0.x, l(0)
  mov r7.y, l(1.000000)
endif
lt r7.z, l(0.500000), r4.x
min r7.x, r7.x, r7.y
movc r7.x, r7.z, r7.x, r7.y
add r7.x, -r7.x, l(1.000000)
lt r7.y, l(0.000010), v8.w
lt r7.z, l(0.500000), cb0[147].w
add r7.w, cb0[2].w, cb0[2].w
min r7.w, r7.w, l(1.000000)
movc r7.z, r7.z, r7.w, l(1.000000)
eq r3.x, r3.x, l(1.000000)
if_nz r3.x
  ne r7.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[93].w
  add r8.xyz, cb0[93].xyzx, -cb0[94].xyzx
  mad r8.xyz, cb0[145].zzzz, r8.xyzx, cb0[94].xyzx
  movc r8.xyz, r7.wwww, r8.xyzx, cb0[93].xyzx
else
  if_nz r5.x
    ne r7.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[93].w
    add r9.xyz, cb0[111].xyzx, -cb0[112].xyzx
    mad r9.xyz, cb0[145].zzzz, r9.xyzx, cb0[112].xyzx
    movc r8.xyz, r7.wwww, r9.xyzx, cb0[111].xyzx
  else
    ne r7.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[93].w
    add r9.xyz, cb0[117].xyzx, -cb0[118].xyzx
    mad r9.xyz, cb0[145].zzzz, r9.xyzx, cb0[118].xyzx
    movc r9.xyz, r7.wwww, r9.xyzx, cb0[117].xyzx
    add r10.xyz, cb0[123].xyzx, -cb0[124].xyzx
    mad r10.xyz, cb0[145].zzzz, r10.xyzx, cb0[124].xyzx
    movc r10.xyz, r7.wwww, r10.xyzx, cb0[123].xyzx
    add r11.xyz, cb0[129].xyzx, -cb0[130].xyzx
    mad r11.xyz, cb0[145].zzzz, r11.xyzx, cb0[130].xyzx
    movc r11.xyz, r7.wwww, r11.xyzx, cb0[129].xyzx
    movc r10.xyz, r5.zzzz, r10.xyzx, r11.xyzx
    movc r8.xyz, r5.yyyy, r9.xyzx, r10.xyzx
  endif
endif
lt r7.w, r7.z, l(1.000000)
and r9.xyz, r8.xyzx, r7.wwww
ne r8.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[95].z
ne r9.w, l(0.000000, 0.000000, 0.000000, 0.000000), v8.w
not r10.x, r9.w
and r8.w, r8.w, r10.x
add r10.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r10.xyz, r0.xxxx, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
movc r10.xyz, r8.wwww, r10.xyzx, r8.xyzx
mad r0.x, -r6.w, r3.w, l(1.000000)
add r11.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r11.xyz, r0.xxxx, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
movc r10.xyz, r9.wwww, r10.xyzx, r11.xyzx
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r7.x
or r0.x, r0.x, r7.y
mul r10.xyz, r6.xyzx, r10.xyzx
mul r11.xyz, r6.xyzx, cb0[144].xxxx
movc r10.xyz, r0.xxxx, r10.xyzx, r11.xyzx
mul r11.xyz, r6.xyzx, r9.xyzx
mad r9.xyz, -r6.xyzx, r9.xyzx, r10.xyzx
mad r9.xyz, r7.zzzz, r9.xyzx, r11.xyzx
movc r9.xyz, r7.wwww, r9.xyzx, r10.xyzx
movc r0.x, r5.z, cb0[124].w, cb0[130].w
movc r3.w, r5.z, cb0[126].x, cb0[132].x
movc r10.xyzw, r5.zzzz, cb0[125].xyzw, cb0[131].xyzw
movc r0.x, r5.y, cb0[118].w, r0.x
movc r3.w, r5.y, cb0[120].x, r3.w
movc r10.xyzw, r5.yyyy, cb0[119].xyzw, r10.xyzw
movc r7.x, r5.x, cb0[112].w, r0.x
movc r7.y, r5.x, cb0[113].x, r10.x
movc r0.x, r5.x, cb0[114].x, r3.w
movc r10.xyz, r5.xxxx, cb0[113].yzwy, r10.yzwy
movc r10.xyz, r3.xxxx, cb0[96].yzwy, r10.xyzx
movc r7.xy, r3.xxxx, cb0[98].xyxx, r7.xyxx
movc r0.x, r3.x, cb0[97].w, r0.x
dp3 r1.x, v7.xyzx, r1.xzwx
max r1.x, r1.x, l(0.000100)
log r1.x, r1.x
mul r1.x, r1.x, r7.x
exp r1.x, r1.x
lt r1.x, r3.y, r1.x
mul r10.xyz, r7.yyyy, r10.xyzx
mul r10.xyz, r4.xxxx, r10.xyzx
mad r2.xyz, r2.xyzx, r4.yzwy, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r0.xxxx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r2.xyzx, r10.xyzx
mov r4.w, l(1.000000)
and r4.xyzw, r1.xxxx, r4.xyzw
mul r1.xzw, r4.xxyz, cb0[144].xxxx
mul r1.xzw, r4.wwww, r1.xxzw
mul r2.xyz, r6.xyzx, cb0[103].xyzx
mul r2.xyz, r2.xyzx, cb0[102].zzzz
mul r4.xyz, cb0[110].yzwy, cb0[110].xxxx
mul r10.xyz, cb0[115].wwww, cb0[116].xyzx
mul r11.xyz, cb0[121].wwww, cb0[122].xyzx
mul r12.xyz, cb0[127].wwww, cb0[128].xyzx
mul r13.xyz, cb0[102].wwww, cb0[104].xyzx
mul r13.xyz, r2.xyzx, r13.xyzx
mul r4.xyz, r2.xyzx, r4.xyzx
mul r10.xyz, r2.xyzx, r10.xyzx
mul r11.xyz, r2.xyzx, r11.xyzx
mul r12.xyz, r2.xyzx, r12.xyzx
movc r2.xyz, r5.wwww, r12.xyzx, r2.xyzx
movc r2.xyz, r5.zzzz, r11.xyzx, r2.xyzx
movc r2.xyz, r5.yyyy, r10.xyzx, r2.xyzx
movc r2.xyz, r5.xxxx, r4.xyzx, r2.xyzx
movc r2.xyz, r3.xxxx, r13.xyzx, r2.xyzx
mul r3.xyw, r7.zzzz, r1.xzxw
movc r1.xzw, r7.wwww, r3.xxyw, r1.xxzw
add r3.xyw, r1.xzxw, r9.xyxz
add r2.xyz, r2.xyzx, -r3.xywx
mad r2.xyz, r2.wwww, r2.xyzx, r3.xywx
movc r2.xyz, r3.zzzz, r2.xyzx, r3.xywx
dp3_sat r0.x, r0.yzwy, v7.xyzx
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000100)
log r0.x, r0.x
mul r0.x, r0.x, cb0[158].x
exp r0.x, r0.x
max r0.yzw, cb0[156].xxyz, cb0[157].xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
mul r3.xyz, r0.xyzx, cb0[158].yyyy
mad r0.xyz, r0.xyzx, cb0[158].yyyy, r2.xyzx
add r2.x, -r2.w, l(1.000000)
mad r2.x, cb0[158].z, r2.x, r2.w
mad r2.yzw, r6.xxyz, r8.xxyz, r3.xxyz
max r3.x, r0.z, r0.y
max r3.w, r0.x, r3.x
lt r4.x, l(1.000000), r3.w
div r3.xyz, r0.xyzx, r3.wwww
mov r0.w, l(1.000000)
movc r0.xyzw, r4.xxxx, r3.xyzw, r0.xyzw
mad r1.xzw, cb0[98].zzzz, r1.xxzw, r2.yyzw
add r2.yzw, -r0.xxyz, r1.xxzw
mad r2.yzw, cb0[153].xxxx, r2.yyzw, r0.xxyz
movc r1.xyz, r1.yyyy, r2.yzwy, r1.xzwx
mul_sat r0.w, r0.w, l(0.050000)
sqrt o1.w, r0.w
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[81].x
mul r1.w, cb0[81].y, l(0.00392156886)
movc o2.z, r0.w, r1.w, r1.z
mad o0.xyz, v7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, l(0.333000)
mov o1.xyz, r0.xyzx
mov o2.xy, r1.xyxx
mov o2.w, r2.x
mov o3.x, l(0.0156862754)
mov o4.x, r2.x
mov o5.x, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
